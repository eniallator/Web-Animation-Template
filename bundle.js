/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app/config.ts":
/*!***************************!*\
  !*** ./src/app/config.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _configParser_create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../configParser/create */ \"./src/configParser/create.ts\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.config)((0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.checkboxConfig)({\n  id: \"example-checkbox\",\n  label: \"Example Checkbox\",\n  tooltip: \"Example tooltip\",\n  \"default\": true\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.rangeConfig)({\n  id: \"example-range\",\n  label: \"Example Range\",\n  \"default\": 5,\n  attrs: {\n    min: \"1\",\n    max: \"10\",\n    step: \"0.5\"\n  }\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.numberConfig)({\n  id: \"example-number\",\n  label: \"Example Number\",\n  \"default\": 5,\n  attrs: {\n    min: \"1\",\n    max: \"10\"\n  }\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.colorConfig)({\n  id: \"example-colour\",\n  label: \"Example Colour\",\n  \"default\": \"FF5A5F\"\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.buttonConfig)({\n  id: \"example-button\",\n  text: \"Example Button\"\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.fileConfig)({\n  id: \"example-file\",\n  text: \"Example File\",\n  attrs: {\n    accept: \"image/*\"\n  }\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.textConfig)({\n  id: \"example-text\",\n  label: \"Example Text\",\n  \"default\": \"Hello\",\n  attrs: {\n    placeholder: \"World!\"\n  }\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.datetimeConfig)({\n  id: \"example-datetime\",\n  label: \"Example Date Time\",\n  \"default\": new Date(\"2018-06-14T10:03\")\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.selectConfig)({\n  id: \"example-select\",\n  label: \"Example Select\",\n  \"default\": \"bar\",\n  options: [\"foo\", \"bar\", \"baz\", \"another option\"]\n}), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.configCollection)({\n  id: \"example-collection\",\n  label: \"Example Collection\",\n  expandable: true,\n  fields: [(0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.rangeConfig)({\n    id: \"example-collection-range\",\n    label: \"Range\",\n    \"default\": 2,\n    attrs: {\n      min: \"0\",\n      max: \"4\",\n      step: \"1\"\n    }\n  }), (0,_configParser_create__WEBPACK_IMPORTED_MODULE_0__.checkboxConfig)({\n    id: \"example-collection-checkbox\",\n    label: \"Checkbox\",\n    \"default\": false\n  })],\n  \"default\": [[4, true], [1, false]]\n})));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBwL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVlnQztBQUVoQyxpRUFBZUcsNERBQU0sQ0FDbkJGLG9FQUFjLENBQUM7RUFDYlUsRUFBRSxFQUFFLGtCQUFrQjtFQUN0QkMsS0FBSyxFQUFFLGtCQUFrQjtFQUN6QkMsT0FBTyxFQUFFLGlCQUFpQjtFQUMxQixXQUFTO0FBQ1gsQ0FBQyxDQUFDLEVBQ0ZMLGlFQUFXLENBQUM7RUFDVkcsRUFBRSxFQUFFLGVBQWU7RUFDbkJDLEtBQUssRUFBRSxlQUFlO0VBQ3RCLFdBQVMsQ0FBQztFQUNWRSxLQUFLLEVBQUU7SUFDTEMsR0FBRyxFQUFFLEdBQUc7SUFDUkMsR0FBRyxFQUFFLElBQUk7SUFDVEMsSUFBSSxFQUFFO0VBQ1I7QUFDRixDQUFDLENBQUMsRUFDRlYsa0VBQVksQ0FBQztFQUNYSSxFQUFFLEVBQUUsZ0JBQWdCO0VBQ3BCQyxLQUFLLEVBQUUsZ0JBQWdCO0VBQ3ZCLFdBQVMsQ0FBQztFQUNWRSxLQUFLLEVBQUU7SUFDTEMsR0FBRyxFQUFFLEdBQUc7SUFDUkMsR0FBRyxFQUFFO0VBQ1A7QUFDRixDQUFDLENBQUMsRUFDRmQsaUVBQVcsQ0FBQztFQUNWUyxFQUFFLEVBQUUsZ0JBQWdCO0VBQ3BCQyxLQUFLLEVBQUUsZ0JBQWdCO0VBQ3ZCLFdBQVM7QUFDWCxDQUFDLENBQUMsRUFDRlosa0VBQVksQ0FBQztFQUNYVyxFQUFFLEVBQUUsZ0JBQWdCO0VBQ3BCTyxJQUFJLEVBQUU7QUFDUixDQUFDLENBQUMsRUFDRlosZ0VBQVUsQ0FBQztFQUNUSyxFQUFFLEVBQUUsY0FBYztFQUNsQk8sSUFBSSxFQUFFLGNBQWM7RUFDcEJKLEtBQUssRUFBRTtJQUNMSyxNQUFNLEVBQUU7RUFDVjtBQUNGLENBQUMsQ0FBQyxFQUNGVCxnRUFBVSxDQUFDO0VBQ1RDLEVBQUUsRUFBRSxjQUFjO0VBQ2xCQyxLQUFLLEVBQUUsY0FBYztFQUNyQixXQUFTLE9BQU87RUFDaEJFLEtBQUssRUFBRTtJQUNMTSxXQUFXLEVBQUU7RUFDZjtBQUNGLENBQUMsQ0FBQyxFQUNGZixvRUFBYyxDQUFDO0VBQ2JNLEVBQUUsRUFBRSxrQkFBa0I7RUFDdEJDLEtBQUssRUFBRSxtQkFBbUI7RUFDMUIsV0FBUyxJQUFJUyxJQUFJLENBQUMsa0JBQWtCO0FBQ3RDLENBQUMsQ0FBQyxFQUNGWixrRUFBWSxDQUFDO0VBQ1hFLEVBQUUsRUFBRSxnQkFBZ0I7RUFDcEJDLEtBQUssRUFBRSxnQkFBZ0I7RUFDdkIsV0FBUyxLQUFLO0VBQ2RVLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGdCQUFnQjtBQUNqRCxDQUFDLENBQUMsRUFDRmxCLHNFQUFnQixDQUFDO0VBQ2ZPLEVBQUUsRUFBRSxvQkFBb0I7RUFDeEJDLEtBQUssRUFBRSxvQkFBb0I7RUFDM0JXLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxNQUFNLEVBQUUsQ0FDTmhCLGlFQUFXLENBQUM7SUFDVkcsRUFBRSxFQUFFLDBCQUEwQjtJQUM5QkMsS0FBSyxFQUFFLE9BQU87SUFDZCxXQUFTLENBQUM7SUFDVkUsS0FBSyxFQUFFO01BQ0xDLEdBQUcsRUFBRSxHQUFHO01BQ1JDLEdBQUcsRUFBRSxHQUFHO01BQ1JDLElBQUksRUFBRTtJQUNSO0VBQ0YsQ0FBQyxDQUFDLEVBQ0ZoQixvRUFBYyxDQUFDO0lBQ2JVLEVBQUUsRUFBRSw2QkFBNkI7SUFDakNDLEtBQUssRUFBRSxVQUFVO0lBQ2pCLFdBQVM7RUFDWCxDQUFDLENBQUMsQ0FDSDtFQUNELFdBQVMsQ0FDUCxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsRUFDVCxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUM7QUFFZCxDQUFDLENBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcnQtdGVtcGxhdGUvLi9zcmMvYXBwL2NvbmZpZy50cz81NzFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGJ1dHRvbkNvbmZpZyxcbiAgY2hlY2tib3hDb25maWcsXG4gIGNvbG9yQ29uZmlnLFxuICBjb25maWcsXG4gIGNvbmZpZ0NvbGxlY3Rpb24sXG4gIGRhdGV0aW1lQ29uZmlnLFxuICBmaWxlQ29uZmlnLFxuICBudW1iZXJDb25maWcsXG4gIHJhbmdlQ29uZmlnLFxuICBzZWxlY3RDb25maWcsXG4gIHRleHRDb25maWcsXG59IGZyb20gXCIuLi9jb25maWdQYXJzZXIvY3JlYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZyhcbiAgY2hlY2tib3hDb25maWcoe1xuICAgIGlkOiBcImV4YW1wbGUtY2hlY2tib3hcIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIENoZWNrYm94XCIsXG4gICAgdG9vbHRpcDogXCJFeGFtcGxlIHRvb2x0aXBcIixcbiAgICBkZWZhdWx0OiB0cnVlLFxuICB9KSxcbiAgcmFuZ2VDb25maWcoe1xuICAgIGlkOiBcImV4YW1wbGUtcmFuZ2VcIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIFJhbmdlXCIsXG4gICAgZGVmYXVsdDogNSxcbiAgICBhdHRyczoge1xuICAgICAgbWluOiBcIjFcIixcbiAgICAgIG1heDogXCIxMFwiLFxuICAgICAgc3RlcDogXCIwLjVcIixcbiAgICB9LFxuICB9KSxcbiAgbnVtYmVyQ29uZmlnKHtcbiAgICBpZDogXCJleGFtcGxlLW51bWJlclwiLFxuICAgIGxhYmVsOiBcIkV4YW1wbGUgTnVtYmVyXCIsXG4gICAgZGVmYXVsdDogNSxcbiAgICBhdHRyczoge1xuICAgICAgbWluOiBcIjFcIixcbiAgICAgIG1heDogXCIxMFwiLFxuICAgIH0sXG4gIH0pLFxuICBjb2xvckNvbmZpZyh7XG4gICAgaWQ6IFwiZXhhbXBsZS1jb2xvdXJcIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIENvbG91clwiLFxuICAgIGRlZmF1bHQ6IFwiRkY1QTVGXCIsXG4gIH0pLFxuICBidXR0b25Db25maWcoe1xuICAgIGlkOiBcImV4YW1wbGUtYnV0dG9uXCIsXG4gICAgdGV4dDogXCJFeGFtcGxlIEJ1dHRvblwiLFxuICB9KSxcbiAgZmlsZUNvbmZpZyh7XG4gICAgaWQ6IFwiZXhhbXBsZS1maWxlXCIsXG4gICAgdGV4dDogXCJFeGFtcGxlIEZpbGVcIixcbiAgICBhdHRyczoge1xuICAgICAgYWNjZXB0OiBcImltYWdlLypcIixcbiAgICB9LFxuICB9KSxcbiAgdGV4dENvbmZpZyh7XG4gICAgaWQ6IFwiZXhhbXBsZS10ZXh0XCIsXG4gICAgbGFiZWw6IFwiRXhhbXBsZSBUZXh0XCIsXG4gICAgZGVmYXVsdDogXCJIZWxsb1wiLFxuICAgIGF0dHJzOiB7XG4gICAgICBwbGFjZWhvbGRlcjogXCJXb3JsZCFcIixcbiAgICB9LFxuICB9KSxcbiAgZGF0ZXRpbWVDb25maWcoe1xuICAgIGlkOiBcImV4YW1wbGUtZGF0ZXRpbWVcIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIERhdGUgVGltZVwiLFxuICAgIGRlZmF1bHQ6IG5ldyBEYXRlKFwiMjAxOC0wNi0xNFQxMDowM1wiKSxcbiAgfSksXG4gIHNlbGVjdENvbmZpZyh7XG4gICAgaWQ6IFwiZXhhbXBsZS1zZWxlY3RcIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIFNlbGVjdFwiLFxuICAgIGRlZmF1bHQ6IFwiYmFyXCIsXG4gICAgb3B0aW9uczogW1wiZm9vXCIsIFwiYmFyXCIsIFwiYmF6XCIsIFwiYW5vdGhlciBvcHRpb25cIl0sXG4gIH0pLFxuICBjb25maWdDb2xsZWN0aW9uKHtcbiAgICBpZDogXCJleGFtcGxlLWNvbGxlY3Rpb25cIixcbiAgICBsYWJlbDogXCJFeGFtcGxlIENvbGxlY3Rpb25cIixcbiAgICBleHBhbmRhYmxlOiB0cnVlLFxuICAgIGZpZWxkczogW1xuICAgICAgcmFuZ2VDb25maWcoe1xuICAgICAgICBpZDogXCJleGFtcGxlLWNvbGxlY3Rpb24tcmFuZ2VcIixcbiAgICAgICAgbGFiZWw6IFwiUmFuZ2VcIixcbiAgICAgICAgZGVmYXVsdDogMixcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICBtaW46IFwiMFwiLFxuICAgICAgICAgIG1heDogXCI0XCIsXG4gICAgICAgICAgc3RlcDogXCIxXCIsXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIGNoZWNrYm94Q29uZmlnKHtcbiAgICAgICAgaWQ6IFwiZXhhbXBsZS1jb2xsZWN0aW9uLWNoZWNrYm94XCIsXG4gICAgICAgIGxhYmVsOiBcIkNoZWNrYm94XCIsXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgICAgfSksXG4gICAgXSxcbiAgICBkZWZhdWx0OiBbXG4gICAgICBbNCwgdHJ1ZV0sXG4gICAgICBbMSwgZmFsc2VdLFxuICAgIF0sXG4gIH0pXG4pO1xuIl0sIm5hbWVzIjpbImJ1dHRvbkNvbmZpZyIsImNoZWNrYm94Q29uZmlnIiwiY29sb3JDb25maWciLCJjb25maWciLCJjb25maWdDb2xsZWN0aW9uIiwiZGF0ZXRpbWVDb25maWciLCJmaWxlQ29uZmlnIiwibnVtYmVyQ29uZmlnIiwicmFuZ2VDb25maWciLCJzZWxlY3RDb25maWciLCJ0ZXh0Q29uZmlnIiwiaWQiLCJsYWJlbCIsInRvb2x0aXAiLCJhdHRycyIsIm1pbiIsIm1heCIsInN0ZXAiLCJ0ZXh0IiwiYWNjZXB0IiwicGxhY2Vob2xkZXIiLCJEYXRlIiwib3B0aW9ucyIsImV4cGFuZGFibGUiLCJmaWVsZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/app/config.ts\n");

/***/ }),

/***/ "./src/app/index.ts":
/*!**************************!*\
  !*** ./src/app/index.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/types */ \"./src/core/types.ts\");\n\nfunction onResize(evt, appContext) {\n  init(appContext);\n}\nfunction init(_ref) {\n  var paramConfig = _ref.paramConfig,\n    ctx = _ref.ctx,\n    canvas = _ref.canvas,\n    mouse = _ref.mouse;\n  ctx.fillStyle = \"black\";\n  ctx.strokeStyle = \"white\";\n\n  // Art code\n\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_core_types__WEBPACK_IMPORTED_MODULE_0__.appMethods)({\n  init: init,\n  onResize: onResize\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBwL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBR3ZELFNBQVNDLFFBQVFBLENBQUNDLEdBQVksRUFBRUMsVUFBcUMsRUFBRTtFQUNyRUMsSUFBSSxDQUFDRCxVQUFVLENBQUM7QUFDbEI7QUFFQSxTQUFTQyxJQUFJQSxDQUFBQyxJQUFBLEVBQWlFO0VBQUEsSUFBOURDLFdBQVcsR0FBQUQsSUFBQSxDQUFYQyxXQUFXO0lBQUVDLEdBQUcsR0FBQUYsSUFBQSxDQUFIRSxHQUFHO0lBQUVDLE1BQU0sR0FBQUgsSUFBQSxDQUFORyxNQUFNO0lBQUVDLEtBQUssR0FBQUosSUFBQSxDQUFMSSxLQUFLO0VBQzdDRixHQUFHLENBQUNHLFNBQVMsR0FBRyxPQUFPO0VBQ3ZCSCxHQUFHLENBQUNJLFdBQVcsR0FBRyxPQUFPOztFQUV6Qjs7RUFFQUosR0FBRyxDQUFDSyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRUosTUFBTSxDQUFDSyxLQUFLLEVBQUVMLE1BQU0sQ0FBQ00sTUFBTSxDQUFDO0FBQ2pEO0FBRUEsaUVBQWVkLHVEQUFVLENBQUM7RUFDeEJJLElBQUksRUFBSkEsSUFBSTtFQUNKSCxRQUFRLEVBQVJBO0FBQ0YsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFydC10ZW1wbGF0ZS8uL3NyYy9hcHAvaW5kZXgudHM/ZjVjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBDb250ZXh0LCBhcHBNZXRob2RzIH0gZnJvbSBcIi4uL2NvcmUvdHlwZXNcIjtcbmltcG9ydCBjb25maWcgZnJvbSBcIi4vY29uZmlnXCI7XG5cbmZ1bmN0aW9uIG9uUmVzaXplKGV2dDogVUlFdmVudCwgYXBwQ29udGV4dDogQXBwQ29udGV4dDx0eXBlb2YgY29uZmlnPikge1xuICBpbml0KGFwcENvbnRleHQpO1xufVxuXG5mdW5jdGlvbiBpbml0KHsgcGFyYW1Db25maWcsIGN0eCwgY2FudmFzLCBtb3VzZSB9OiBBcHBDb250ZXh0PHR5cGVvZiBjb25maWc+KSB7XG4gIGN0eC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XG4gIGN0eC5zdHJva2VTdHlsZSA9IFwid2hpdGVcIjtcblxuICAvLyBBcnQgY29kZVxuXG4gIGN0eC5maWxsUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcHBNZXRob2RzKHtcbiAgaW5pdCxcbiAgb25SZXNpemUsXG59KTtcbiJdLCJuYW1lcyI6WyJhcHBNZXRob2RzIiwib25SZXNpemUiLCJldnQiLCJhcHBDb250ZXh0IiwiaW5pdCIsIl9yZWYiLCJwYXJhbUNvbmZpZyIsImN0eCIsImNhbnZhcyIsIm1vdXNlIiwiZmlsbFN0eWxlIiwic3Ryb2tlU3R5bGUiLCJmaWxsUmVjdCIsIndpZHRoIiwiaGVpZ2h0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/app/index.ts\n");

/***/ }),

/***/ "./src/configParser/create.ts":
/*!************************************!*\
  !*** ./src/configParser/create.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buttonConfig: () => (/* binding */ buttonConfig),\n/* harmony export */   checkboxConfig: () => (/* binding */ checkboxConfig),\n/* harmony export */   colorConfig: () => (/* binding */ colorConfig),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   configCollection: () => (/* binding */ configCollection),\n/* harmony export */   datetimeConfig: () => (/* binding */ datetimeConfig),\n/* harmony export */   fileConfig: () => (/* binding */ fileConfig),\n/* harmony export */   inputType: () => (/* binding */ inputType),\n/* harmony export */   numberConfig: () => (/* binding */ numberConfig),\n/* harmony export */   rangeConfig: () => (/* binding */ rangeConfig),\n/* harmony export */   selectConfig: () => (/* binding */ selectConfig),\n/* harmony export */   textConfig: () => (/* binding */ textConfig)\n/* harmony export */ });\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./src/core/utils.ts\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction checkboxConfig(config) {\n  return _objectSpread({\n    type: \"Checkbox\"\n  }, config);\n}\nfunction numberConfig(config) {\n  return _objectSpread({\n    type: \"Number\"\n  }, config);\n}\nfunction rangeConfig(config) {\n  return _objectSpread({\n    type: \"Range\"\n  }, config);\n}\nfunction colorConfig(config) {\n  return _objectSpread({\n    type: \"Color\"\n  }, config);\n}\nfunction textConfig(config) {\n  return _objectSpread({\n    type: \"Text\"\n  }, config);\n}\nfunction datetimeConfig(config) {\n  return _objectSpread({\n    type: \"Datetime\"\n  }, config);\n}\nfunction selectConfig(config) {\n  return _objectSpread({\n    type: \"Select\"\n  }, config);\n}\nfunction fileConfig(config) {\n  return _objectSpread({\n    type: \"File\"\n  }, config);\n}\nfunction buttonConfig(config) {\n  return _objectSpread({\n    type: \"Button\"\n  }, config);\n}\nfunction configCollection(config) {\n  return _objectSpread({\n    type: \"Collection\"\n  }, config);\n}\nfunction config() {\n  for (var _len = arguments.length, parts = new Array(_len), _key = 0; _key < _len; _key++) {\n    parts[_key] = arguments[_key];\n  }\n  return parts;\n}\nfunction inputType(type) {\n  switch (type) {\n    case \"Checkbox\":\n      return \"checkbox\";\n    case \"Color\":\n      return \"color\";\n    case \"Datetime\":\n      return \"datetime-local\";\n    case \"File\":\n      return \"file\";\n    case \"Number\":\n      return \"number\";\n    case \"Range\":\n      return \"range\";\n    case \"Select\":\n      return \"select\";\n    case \"Text\":\n      return \"text\";\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.checkExhausted)(type);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnUGFyc2VyL2NyZWF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStDO0FBaUJ4QyxTQUFTQyxjQUFjQSxDQUM1QkMsTUFBdUMsRUFDcEI7RUFDbkIsT0FBQUMsYUFBQTtJQUFTQyxJQUFJLEVBQUU7RUFBVSxHQUFLRixNQUFNO0FBQ3RDO0FBRU8sU0FBU0csWUFBWUEsQ0FDMUJILE1BQXFDLEVBQ3BCO0VBQ2pCLE9BQUFDLGFBQUE7SUFBU0MsSUFBSSxFQUFFO0VBQVEsR0FBS0YsTUFBTTtBQUNwQztBQUVPLFNBQVNJLFdBQVdBLENBQ3pCSixNQUFvQyxFQUNwQjtFQUNoQixPQUFBQyxhQUFBO0lBQVNDLElBQUksRUFBRTtFQUFPLEdBQUtGLE1BQU07QUFDbkM7QUFFTyxTQUFTSyxXQUFXQSxDQUN6QkwsTUFBb0MsRUFDcEI7RUFDaEIsT0FBQUMsYUFBQTtJQUFTQyxJQUFJLEVBQUU7RUFBTyxHQUFLRixNQUFNO0FBQ25DO0FBRU8sU0FBU00sVUFBVUEsQ0FDeEJOLE1BQW1DLEVBQ3BCO0VBQ2YsT0FBQUMsYUFBQTtJQUFTQyxJQUFJLEVBQUU7RUFBTSxHQUFLRixNQUFNO0FBQ2xDO0FBRU8sU0FBU08sY0FBY0EsQ0FDNUJQLE1BQXVDLEVBQ3BCO0VBQ25CLE9BQUFDLGFBQUE7SUFBU0MsSUFBSSxFQUFFO0VBQVUsR0FBS0YsTUFBTTtBQUN0QztBQUVPLFNBQVNRLFlBQVlBLENBSTFCUixNQUEyQyxFQUF5QjtFQUNwRSxPQUFBQyxhQUFBO0lBQVNDLElBQUksRUFBRTtFQUFRLEdBQUtGLE1BQU07QUFDcEM7QUFFTyxTQUFTUyxVQUFVQSxDQUN4QlQsTUFBbUMsRUFDcEI7RUFDZixPQUFBQyxhQUFBO0lBQVNDLElBQUksRUFBRTtFQUFNLEdBQUtGLE1BQU07QUFDbEM7QUFFTyxTQUFTVSxZQUFZQSxDQUMxQlYsTUFBcUMsRUFDcEI7RUFDakIsT0FBQUMsYUFBQTtJQUFTQyxJQUFJLEVBQUU7RUFBUSxHQUFLRixNQUFNO0FBQ3BDO0FBRU8sU0FBU1csZ0JBQWdCQSxDQUc5QlgsTUFBNEMsRUFBMEI7RUFDdEUsT0FBQUMsYUFBQTtJQUFTQyxJQUFJLEVBQUU7RUFBWSxHQUFLRixNQUFNO0FBQ3hDO0FBRU8sU0FBU0EsTUFBTUEsQ0FBQSxFQUVqQjtFQUFBLFNBQUFZLElBQUEsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLEVBREFDLEtBQUssT0FBQUMsS0FBQSxDQUFBSixJQUFBLEdBQUFLLElBQUEsTUFBQUEsSUFBQSxHQUFBTCxJQUFBLEVBQUFLLElBQUE7SUFBTEYsS0FBSyxDQUFBRSxJQUFBLElBQUFKLFNBQUEsQ0FBQUksSUFBQTtFQUFBO0VBRVIsT0FBT0YsS0FBSztBQUNkO0FBRU8sU0FBU0csU0FBU0EsQ0FBQ2hCLElBQWlDLEVBQVU7RUFDbkUsUUFBUUEsSUFBSTtJQUNWLEtBQUssVUFBVTtNQUNiLE9BQU8sVUFBVTtJQUNuQixLQUFLLE9BQU87TUFDVixPQUFPLE9BQU87SUFDaEIsS0FBSyxVQUFVO01BQ2IsT0FBTyxnQkFBZ0I7SUFDekIsS0FBSyxNQUFNO01BQ1QsT0FBTyxNQUFNO0lBQ2YsS0FBSyxRQUFRO01BQ1gsT0FBTyxRQUFRO0lBQ2pCLEtBQUssT0FBTztNQUNWLE9BQU8sT0FBTztJQUNoQixLQUFLLFFBQVE7TUFDWCxPQUFPLFFBQVE7SUFDakIsS0FBSyxNQUFNO01BQ1QsT0FBTyxNQUFNO0lBQ2Y7TUFDRSxPQUFPSiwyREFBYyxDQUFDSSxJQUFJLENBQUM7RUFDL0I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcnQtdGVtcGxhdGUvLi9zcmMvY29uZmlnUGFyc2VyL2NyZWF0ZS50cz8zOGM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNoZWNrRXhoYXVzdGVkIH0gZnJvbSBcIi4uL2NvcmUvdXRpbHNcIjtcbmltcG9ydCB7XG4gIENoZWNrYm94Q29uZmlnLFxuICBOdW1iZXJDb25maWcsXG4gIFJhbmdlQ29uZmlnLFxuICBDb2xvckNvbmZpZyxcbiAgRGF0ZXRpbWVDb25maWcsXG4gIFNlbGVjdENvbmZpZyxcbiAgRmlsZUNvbmZpZyxcbiAgQnV0dG9uQ29uZmlnLFxuICBDb25maWdDb2xsZWN0aW9uLFxuICBDb25maWdQYXJ0LFxuICBUZXh0Q29uZmlnLFxuICBDb25maWdDb2xsZWN0aW9uRmllbGRzLFxuICBJbnB1dENvbmZpZyxcbn0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrYm94Q29uZmlnPGNvbnN0IEkgZXh0ZW5kcyBzdHJpbmc+KFxuICBjb25maWc6IE9taXQ8Q2hlY2tib3hDb25maWc8ST4sIFwidHlwZVwiPlxuKTogQ2hlY2tib3hDb25maWc8ST4ge1xuICByZXR1cm4geyB0eXBlOiBcIkNoZWNrYm94XCIsIC4uLmNvbmZpZyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbnVtYmVyQ29uZmlnPGNvbnN0IEkgZXh0ZW5kcyBzdHJpbmc+KFxuICBjb25maWc6IE9taXQ8TnVtYmVyQ29uZmlnPEk+LCBcInR5cGVcIj5cbik6IE51bWJlckNvbmZpZzxJPiB7XG4gIHJldHVybiB7IHR5cGU6IFwiTnVtYmVyXCIsIC4uLmNvbmZpZyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmFuZ2VDb25maWc8Y29uc3QgSSBleHRlbmRzIHN0cmluZz4oXG4gIGNvbmZpZzogT21pdDxSYW5nZUNvbmZpZzxJPiwgXCJ0eXBlXCI+XG4pOiBSYW5nZUNvbmZpZzxJPiB7XG4gIHJldHVybiB7IHR5cGU6IFwiUmFuZ2VcIiwgLi4uY29uZmlnIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb2xvckNvbmZpZzxjb25zdCBJIGV4dGVuZHMgc3RyaW5nPihcbiAgY29uZmlnOiBPbWl0PENvbG9yQ29uZmlnPEk+LCBcInR5cGVcIj5cbik6IENvbG9yQ29uZmlnPEk+IHtcbiAgcmV0dXJuIHsgdHlwZTogXCJDb2xvclwiLCAuLi5jb25maWcgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRleHRDb25maWc8Y29uc3QgSSBleHRlbmRzIHN0cmluZz4oXG4gIGNvbmZpZzogT21pdDxUZXh0Q29uZmlnPEk+LCBcInR5cGVcIj5cbik6IFRleHRDb25maWc8ST4ge1xuICByZXR1cm4geyB0eXBlOiBcIlRleHRcIiwgLi4uY29uZmlnIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXRldGltZUNvbmZpZzxjb25zdCBJIGV4dGVuZHMgc3RyaW5nPihcbiAgY29uZmlnOiBPbWl0PERhdGV0aW1lQ29uZmlnPEk+LCBcInR5cGVcIj5cbik6IERhdGV0aW1lQ29uZmlnPEk+IHtcbiAgcmV0dXJuIHsgdHlwZTogXCJEYXRldGltZVwiLCAuLi5jb25maWcgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdENvbmZpZzxcbiAgY29uc3QgSSBleHRlbmRzIHN0cmluZyxcbiAgY29uc3QgVCBleHRlbmRzIHN0cmluZyxcbiAgY29uc3QgQSBleHRlbmRzIHJlYWRvbmx5IFtULCAuLi5UW11dID0gcmVhZG9ubHkgW1QsIC4uLlRbXV1cbj4oY29uZmlnOiBPbWl0PFNlbGVjdENvbmZpZzxJLCBULCBBPiwgXCJ0eXBlXCI+KTogU2VsZWN0Q29uZmlnPEksIFQsIEE+IHtcbiAgcmV0dXJuIHsgdHlwZTogXCJTZWxlY3RcIiwgLi4uY29uZmlnIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWxlQ29uZmlnPGNvbnN0IEkgZXh0ZW5kcyBzdHJpbmc+KFxuICBjb25maWc6IE9taXQ8RmlsZUNvbmZpZzxJPiwgXCJ0eXBlXCI+XG4pOiBGaWxlQ29uZmlnPEk+IHtcbiAgcmV0dXJuIHsgdHlwZTogXCJGaWxlXCIsIC4uLmNvbmZpZyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnV0dG9uQ29uZmlnPGNvbnN0IEkgZXh0ZW5kcyBzdHJpbmc+KFxuICBjb25maWc6IE9taXQ8QnV0dG9uQ29uZmlnPEk+LCBcInR5cGVcIj5cbik6IEJ1dHRvbkNvbmZpZzxJPiB7XG4gIHJldHVybiB7IHR5cGU6IFwiQnV0dG9uXCIsIC4uLmNvbmZpZyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlnQ29sbGVjdGlvbjxcbiAgY29uc3QgSSBleHRlbmRzIHN0cmluZyxcbiAgY29uc3QgRiBleHRlbmRzIENvbmZpZ0NvbGxlY3Rpb25GaWVsZHNcbj4oY29uZmlnOiBPbWl0PENvbmZpZ0NvbGxlY3Rpb248SSwgRj4sIFwidHlwZVwiPik6IENvbmZpZ0NvbGxlY3Rpb248SSwgRj4ge1xuICByZXR1cm4geyB0eXBlOiBcIkNvbGxlY3Rpb25cIiwgLi4uY29uZmlnIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWc8QyBleHRlbmRzIFJlYWRvbmx5QXJyYXk8Q29uZmlnUGFydDxzdHJpbmc+Pj4oXG4gIC4uLnBhcnRzOiBDXG4pOiBDIHtcbiAgcmV0dXJuIHBhcnRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRUeXBlKHR5cGU6IElucHV0Q29uZmlnPHN0cmluZz5bXCJ0eXBlXCJdKTogc3RyaW5nIHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSBcIkNoZWNrYm94XCI6XG4gICAgICByZXR1cm4gXCJjaGVja2JveFwiO1xuICAgIGNhc2UgXCJDb2xvclwiOlxuICAgICAgcmV0dXJuIFwiY29sb3JcIjtcbiAgICBjYXNlIFwiRGF0ZXRpbWVcIjpcbiAgICAgIHJldHVybiBcImRhdGV0aW1lLWxvY2FsXCI7XG4gICAgY2FzZSBcIkZpbGVcIjpcbiAgICAgIHJldHVybiBcImZpbGVcIjtcbiAgICBjYXNlIFwiTnVtYmVyXCI6XG4gICAgICByZXR1cm4gXCJudW1iZXJcIjtcbiAgICBjYXNlIFwiUmFuZ2VcIjpcbiAgICAgIHJldHVybiBcInJhbmdlXCI7XG4gICAgY2FzZSBcIlNlbGVjdFwiOlxuICAgICAgcmV0dXJuIFwic2VsZWN0XCI7XG4gICAgY2FzZSBcIlRleHRcIjpcbiAgICAgIHJldHVybiBcInRleHRcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNoZWNrRXhoYXVzdGVkKHR5cGUpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiY2hlY2tFeGhhdXN0ZWQiLCJjaGVja2JveENvbmZpZyIsImNvbmZpZyIsIl9vYmplY3RTcHJlYWQiLCJ0eXBlIiwibnVtYmVyQ29uZmlnIiwicmFuZ2VDb25maWciLCJjb2xvckNvbmZpZyIsInRleHRDb25maWciLCJkYXRldGltZUNvbmZpZyIsInNlbGVjdENvbmZpZyIsImZpbGVDb25maWciLCJidXR0b25Db25maWciLCJjb25maWdDb2xsZWN0aW9uIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInBhcnRzIiwiQXJyYXkiLCJfa2V5IiwiaW5wdXRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/configParser/create.ts\n");

/***/ }),

/***/ "./src/configParser/event.ts":
/*!***********************************!*\
  !*** ./src/configParser/event.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeCallback: () => (/* binding */ changeCallback),\n/* harmony export */   inputCallback: () => (/* binding */ inputCallback),\n/* harmony export */   inputValue: () => (/* binding */ inputValue)\n/* harmony export */ });\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./src/core/utils.ts\");\n\nfunction inputValue(config, el) {\n  switch (config.type) {\n    case \"Checkbox\":\n      return el.hasAttribute(\"checked\");\n    case \"Color\":\n      return el.value.slice(1).toUpperCase();\n    case \"File\":\n      return \"\";\n    case \"Number\":\n    case \"Range\":\n      return Number(el.value);\n    case \"Datetime\":\n      return new Date(el.value);\n    case \"Select\":\n    case \"Text\":\n      return el.value;\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.checkExhausted)(config);\n  }\n}\nfunction inputCallback(config, onUpdate) {\n  switch (config.type) {\n    case \"Checkbox\":\n    case \"Datetime\":\n    case \"File\":\n    case \"Number\":\n    case \"Range\":\n    case \"Select\":\n    case \"Text\":\n      return null;\n    case \"Color\":\n      return function (evt) {\n        return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.hasKey)(evt.target, \"value\", _core_utils__WEBPACK_IMPORTED_MODULE_0__.isString) ? onUpdate(evt.target.value.slice(1).toUpperCase()) : null;\n      };\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.checkExhausted)(config);\n  }\n}\nfunction changeCallback(config, onUpdate) {\n  switch (config.type) {\n    case \"Color\":\n      return null;\n    case \"Checkbox\":\n      return function (evt) {\n        onUpdate(evt.target.checked);\n      };\n    case \"Datetime\":\n      return function (evt) {\n        return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.hasKey)(evt.target, \"value\", _core_utils__WEBPACK_IMPORTED_MODULE_0__.isString) ? onUpdate(new Date(evt.target.value)) : null;\n      };\n    case \"Select\":\n    case \"Text\":\n      return function (evt) {\n        return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.hasKey)(evt.target, \"value\", _core_utils__WEBPACK_IMPORTED_MODULE_0__.isString) ? onUpdate(evt.target.value) : null;\n      };\n    case \"File\":\n      return function (evt) {\n        return new Promise(function () {\n          var _target$files;\n          var target = evt.target;\n          if (((_target$files = target.files) === null || _target$files === void 0 ? void 0 : _target$files[0]) != null) {\n            var reader = new FileReader();\n            reader.onload = function (evt) {\n              var _evt$target;\n              onUpdate((_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result);\n            };\n            reader.readAsDataURL(target.files[0]);\n          }\n        });\n      };\n    case \"Number\":\n    case \"Range\":\n      return function (evt) {\n        return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.hasKey)(evt.target, \"value\", _core_utils__WEBPACK_IMPORTED_MODULE_0__.isString) ? onUpdate(+evt.target.value) : null;\n      };\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.checkExhausted)(config);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBLENBQWUsQ0FBQyxDQUFDLEtBQUksSUFBSSxFQUFFO1lBQzdCLElBQU1FLE1BQU0sR0FBRyxJQUFJQyxVQUFVLENBQUMsQ0FBQztZQUMvQkQsTUFBTSxDQUFDRSxNQUFNLEdBQUcsVUFBQ1QsR0FBRyxFQUFLO2NBQUEsSUFBQVUsV0FBQTtjQUN2QlgsUUFBUSxFQUFBVyxXQUFBLEdBQUNWLEdBQUcsQ0FBQ0MsTUFBTSxjQUFBUyxXQUFBLHVCQUFWQSxXQUFBLENBQVlDLE1BQTRCLENBQUM7WUFDcEQsQ0FBQztZQUNESixNQUFNLENBQUNLLGFBQWEsQ0FBQ1gsTUFBTSxDQUFDSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7VUFDdkM7UUFDRixDQUFDLENBQUM7TUFBQTtJQUVOLEtBQUssUUFBUTtJQUNiLEtBQUssT0FBTztNQUNWLE9BQU8sVUFBQ04sR0FBRztRQUFBLE9BQ1RkLG1EQUFNLENBQUNjLEdBQUcsQ0FBQ0MsTUFBTSxFQUFFLE9BQU8sRUFBRWQsaURBQVEsQ0FBQyxHQUNqQ1ksUUFBUSxDQUFDLENBQUNDLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDUixLQUEyQixDQUFDLEdBQ2pELElBQUk7TUFBQTtJQUNaO01BQ0UsT0FBT1IsMkRBQWMsQ0FBQ0ksTUFBTSxDQUFDO0VBQ2pDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXJ0LXRlbXBsYXRlLy4vc3JjL2NvbmZpZ1BhcnNlci9ldmVudC50cz84YWUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNoZWNrRXhoYXVzdGVkLCBoYXNLZXksIGlzU3RyaW5nIH0gZnJvbSBcIi4uL2NvcmUvdXRpbHNcIjtcbmltcG9ydCB7IERlcml2ZVN0YXRlVHlwZSB9IGZyb20gXCIuL2Rlcml2ZVwiO1xuaW1wb3J0IHsgSW5wdXRDb25maWcsIE9uVXBkYXRlIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlucHV0VmFsdWU8QyBleHRlbmRzIElucHV0Q29uZmlnPHN0cmluZz4+KFxuICBjb25maWc6IEMsXG4gIGVsOiBIVE1MSW5wdXRFbGVtZW50XG4pOiBEZXJpdmVTdGF0ZVR5cGU8Qz4ge1xuICBzd2l0Y2ggKGNvbmZpZy50eXBlKSB7XG4gICAgY2FzZSBcIkNoZWNrYm94XCI6XG4gICAgICByZXR1cm4gZWwuaGFzQXR0cmlidXRlKFwiY2hlY2tlZFwiKSBhcyBEZXJpdmVTdGF0ZVR5cGU8Qz47XG4gICAgY2FzZSBcIkNvbG9yXCI6XG4gICAgICByZXR1cm4gZWwudmFsdWUuc2xpY2UoMSkudG9VcHBlckNhc2UoKSBhcyBEZXJpdmVTdGF0ZVR5cGU8Qz47XG4gICAgY2FzZSBcIkZpbGVcIjpcbiAgICAgIHJldHVybiBcIlwiIGFzIERlcml2ZVN0YXRlVHlwZTxDPjtcbiAgICBjYXNlIFwiTnVtYmVyXCI6XG4gICAgY2FzZSBcIlJhbmdlXCI6XG4gICAgICByZXR1cm4gTnVtYmVyKGVsLnZhbHVlKSBhcyBEZXJpdmVTdGF0ZVR5cGU8Qz47XG4gICAgY2FzZSBcIkRhdGV0aW1lXCI6XG4gICAgICByZXR1cm4gbmV3IERhdGUoZWwudmFsdWUpIGFzIERlcml2ZVN0YXRlVHlwZTxDPjtcbiAgICBjYXNlIFwiU2VsZWN0XCI6XG4gICAgY2FzZSBcIlRleHRcIjpcbiAgICAgIHJldHVybiBlbC52YWx1ZSBhcyBEZXJpdmVTdGF0ZVR5cGU8Qz47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBjaGVja0V4aGF1c3RlZChjb25maWcpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnB1dENhbGxiYWNrPEMgZXh0ZW5kcyBJbnB1dENvbmZpZzxzdHJpbmc+PihcbiAgY29uZmlnOiBDLFxuICBvblVwZGF0ZTogT25VcGRhdGU8Qz5cbik6ICgoZXZ0OiBFdmVudCkgPT4gdm9pZCkgfCBudWxsIHtcbiAgc3dpdGNoIChjb25maWcudHlwZSkge1xuICAgIGNhc2UgXCJDaGVja2JveFwiOlxuICAgIGNhc2UgXCJEYXRldGltZVwiOlxuICAgIGNhc2UgXCJGaWxlXCI6XG4gICAgY2FzZSBcIk51bWJlclwiOlxuICAgIGNhc2UgXCJSYW5nZVwiOlxuICAgIGNhc2UgXCJTZWxlY3RcIjpcbiAgICBjYXNlIFwiVGV4dFwiOlxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY2FzZSBcIkNvbG9yXCI6XG4gICAgICByZXR1cm4gKGV2dCkgPT5cbiAgICAgICAgaGFzS2V5KGV2dC50YXJnZXQsIFwidmFsdWVcIiwgaXNTdHJpbmcpXG4gICAgICAgICAgPyBvblVwZGF0ZShcbiAgICAgICAgICAgICAgZXZ0LnRhcmdldC52YWx1ZS5zbGljZSgxKS50b1VwcGVyQ2FzZSgpIGFzIERlcml2ZVN0YXRlVHlwZTxDPlxuICAgICAgICAgICAgKVxuICAgICAgICAgIDogbnVsbDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNoZWNrRXhoYXVzdGVkKGNvbmZpZyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoYW5nZUNhbGxiYWNrPEMgZXh0ZW5kcyBJbnB1dENvbmZpZzxzdHJpbmc+PihcbiAgY29uZmlnOiBDLFxuICBvblVwZGF0ZTogT25VcGRhdGU8Qz5cbik6ICgoZXZ0OiBFdmVudCkgPT4gdm9pZCkgfCBudWxsIHtcbiAgc3dpdGNoIChjb25maWcudHlwZSkge1xuICAgIGNhc2UgXCJDb2xvclwiOlxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgY2FzZSBcIkNoZWNrYm94XCI6XG4gICAgICByZXR1cm4gKGV2dCkgPT4ge1xuICAgICAgICBvblVwZGF0ZShcbiAgICAgICAgICAoZXZ0LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50KS5jaGVja2VkIGFzIERlcml2ZVN0YXRlVHlwZTxDPlxuICAgICAgICApO1xuICAgICAgfTtcbiAgICBjYXNlIFwiRGF0ZXRpbWVcIjpcbiAgICAgIHJldHVybiAoZXZ0KSA9PlxuICAgICAgICBoYXNLZXkoZXZ0LnRhcmdldCwgXCJ2YWx1ZVwiLCBpc1N0cmluZylcbiAgICAgICAgICA/IG9uVXBkYXRlKG5ldyBEYXRlKGV2dC50YXJnZXQudmFsdWUpIGFzIERlcml2ZVN0YXRlVHlwZTxDPilcbiAgICAgICAgICA6IG51bGw7XG4gICAgY2FzZSBcIlNlbGVjdFwiOlxuICAgIGNhc2UgXCJUZXh0XCI6XG4gICAgICByZXR1cm4gKGV2dCkgPT5cbiAgICAgICAgaGFzS2V5KGV2dC50YXJnZXQsIFwidmFsdWVcIiwgaXNTdHJpbmcpXG4gICAgICAgICAgPyBvblVwZGF0ZShldnQudGFyZ2V0LnZhbHVlIGFzIERlcml2ZVN0YXRlVHlwZTxDPilcbiAgICAgICAgICA6IG51bGw7XG4gICAgY2FzZSBcIkZpbGVcIjpcbiAgICAgIHJldHVybiAoZXZ0KSA9PlxuICAgICAgICBuZXcgUHJvbWlzZTx2b2lkPigoKSA9PiB7XG4gICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZ0LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgICAgIGlmICh0YXJnZXQuZmlsZXM/LlswXSAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChldnQpID0+IHtcbiAgICAgICAgICAgICAgb25VcGRhdGUoZXZ0LnRhcmdldD8ucmVzdWx0IGFzIERlcml2ZVN0YXRlVHlwZTxDPik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwodGFyZ2V0LmZpbGVzWzBdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgY2FzZSBcIk51bWJlclwiOlxuICAgIGNhc2UgXCJSYW5nZVwiOlxuICAgICAgcmV0dXJuIChldnQpID0+XG4gICAgICAgIGhhc0tleShldnQudGFyZ2V0LCBcInZhbHVlXCIsIGlzU3RyaW5nKVxuICAgICAgICAgID8gb25VcGRhdGUoK2V2dC50YXJnZXQudmFsdWUgYXMgRGVyaXZlU3RhdGVUeXBlPEM+KVxuICAgICAgICAgIDogbnVsbDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNoZWNrRXhoYXVzdGVkKGNvbmZpZyk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjaGVja0V4aGF1c3RlZCIsImhhc0tleSIsImlzU3RyaW5nIiwiaW5wdXRWYWx1ZSIsImNvbmZpZyIsImVsIiwidHlwZSIsImhhc0F0dHJpYnV0ZSIsInZhbHVlIiwic2xpY2UiLCJ0b1VwcGVyQ2FzZSIsIk51bWJlciIsIkRhdGUiLCJpbnB1dENhbGxiYWNrIiwib25VcGRhdGUiLCJldnQiLCJ0YXJnZXQiLCJjaGFuZ2VDYWxsYmFjayIsImNoZWNrZWQiLCJQcm9taXNlIiwiX3RhcmdldCRmaWxlcyIsImZpbGVzIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsIl9ldnQkdGFyZ2V0IiwicmVzdWx0IiwicmVhZEFzRGF0YVVSTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/configParser/event.ts\n");

/***/ }),

/***/ "./src/configParser/index.ts":
/*!***********************************!*\
  !*** ./src/configParser/index.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ParamConfig)\n/* harmony export */ });\n/* harmony import */ var _core_b64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/b64 */ \"./src/core/b64.ts\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils */ \"./src/core/utils.ts\");\n/* harmony import */ var _core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/dom */ \"./src/core/dom.ts\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ \"./src/configParser/init.ts\");\n/* harmony import */ var _serialise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serialise */ \"./src/configParser/serialise.ts\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\nvar ParamConfig = /*#__PURE__*/function () {\n  /**\n   * Config parsing to/from URL parameters and an interactive page element\n   * @param {string} configLocation Path to the config json file\n   * @param {HTMLElement} baseEl The element to put all the config HTML code\n   * @param {boolean} [shortUrl=false] Whether to make the URLs short or not\n   */\n  function ParamConfig(configs, baseEl) {\n    var _this = this;\n    var shortUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var initial = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : location.search;\n    _classCallCheck(this, ParamConfig);\n    _defineProperty(this, \"listeners\", []);\n    _defineProperty(this, \"updates\", []);\n    this.initialValues = this.parseUrlParams(initial, shortUrl);\n    this.shortUrl = shortUrl;\n    this.state = configs.map(function (config) {\n      var _this$initialValues$_;\n      return (0,_init__WEBPACK_IMPORTED_MODULE_3__.initStateItem)(baseEl, config, (_this$initialValues$_ = _this.initialValues[_this.urlKey(config.id)]) !== null && _this$initialValues$_ !== void 0 ? _this$initialValues$_ : null, _this.shortUrl, function () {\n        return _this.typedStateItem(config.id).value;\n      }, function (value) {\n        _this.typedStateItem(config.id).value = value;\n        _this.updates.push(config.id);\n        _this.tellListeners();\n      }, function () {\n        _this.typedStateItem(config.id).clicked = true;\n        _this.updates.push(config.id);\n        _this.tellListeners();\n      });\n    });\n  }\n  _createClass(ParamConfig, [{\n    key: \"extra\",\n    get: function get() {\n      return this.initialValues[this.urlKey(\"extra\")];\n    }\n  }, {\n    key: \"optTypedStateItem\",\n    value: function optTypedStateItem(id) {\n      var item = this.state.find(function (item) {\n        return item.config.id === id;\n      });\n      return item !== null && item !== void 0 ? item : null;\n    }\n  }, {\n    key: \"typedStateItem\",\n    value: function typedStateItem(id) {\n      var item = this.optTypedStateItem(id);\n      if (item != null) {\n        return item;\n      } else {\n        throw new Error(\"Unknown config ID: \".concat(id));\n      }\n    }\n\n    // https://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  }, {\n    key: \"hashString\",\n    value: function hashString(str) {\n      var hash = 0;\n      if (str.length == 0) return hash;\n      for (var i = 0; i < str.length; i++) {\n        var _char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + _char;\n        hash = hash & hash; // Convert to 32bit integer\n      }\n\n      return hash;\n    }\n  }, {\n    key: \"urlKey\",\n    value: function urlKey(key) {\n      return this.shortUrl ? (0,_core_b64__WEBPACK_IMPORTED_MODULE_0__.intToBase64)(this.hashString(key), ParamConfig.hashKeyLength) : key;\n    }\n\n    /**\n     * Adds an event listener to listen to when a config item changes\n     * @param {function(PassedState, string[]):void} listener Listener function\n     * @param {string[]} [updateSubscriptions] IDs of the config items to listen to. Defaults to all config items\n     */\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener, updateSubscriptions) {\n      var _this2 = this;\n      var subscriptions = updateSubscriptions != null ? (updateSubscriptions || Object.keys(this.state)).filter(function (update) {\n        return _this2.optTypedStateItem(update) !== undefined;\n      }) : null;\n      this.listeners.push({\n        listener: listener,\n        subscriptions: subscriptions\n      });\n      this.tellListeners();\n    }\n  }, {\n    key: \"createdPassedState\",\n    value: function createdPassedState() {\n      return this.state.reduce(function (acc, item) {\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, item.config.id, item.value));\n      }, {});\n    }\n\n    /**\n     * Calls the listeners added with the ConfigParser.addListener method\n     * @param {boolean} force Forces the calls to each listener\n     */\n  }, {\n    key: \"tellListeners\",\n    value: function tellListeners() {\n      var _this3 = this;\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!force && this.updates.length === 0) {\n        return;\n      }\n      var _iterator = _createForOfIteratorHelper(this.listeners),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _step.value,\n            listener = _step$value.listener,\n            subscriptions = _step$value.subscriptions;\n          var relevantSubscriptions = subscriptions != null ? subscriptions.filter(function (update) {\n            return _this3.updates.includes(update);\n          }) : _toConsumableArray(this.updates);\n          if (force || relevantSubscriptions.length > 0) {\n            listener(this.createdPassedState(), relevantSubscriptions);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.updates = [];\n    }\n  }, {\n    key: \"parseUrlParams\",\n    value: function parseUrlParams(rawUrlParams, shortUrl) {\n      var paramRegex = shortUrl ? new RegExp(\"[?&]?([^=&]{\".concat(ParamConfig.hashKeyLength, \"})([^&]*)\"), \"g\") : /[?&]?([^=&]+)=?([^&]*)/g;\n      var parsed = {};\n      var tokens;\n      while (tokens = paramRegex.exec(rawUrlParams)) {\n        parsed[tokens[1]] = tokens[2];\n      }\n      return parsed;\n    }\n\n    /**\n     * Gets the current value of a given config item ID\n     * @param {string} id Config Item ID\n     * @returns Current value of the config item\n     */\n  }, {\n    key: \"getVal\",\n    value: function getVal(id) {\n      return this.typedStateItem(id).value;\n    }\n\n    /**\n     * Checks if a config button has been clicked or not.\n     * @param {string} id ID of the config button type\n     * @returns {boolean} If the config button was clicked since the last call\n     */\n  }, {\n    key: \"clicked\",\n    value: function clicked(id) {\n      return this.typedStateItem(id).clicked;\n    }\n\n    /**\n     * Serialises the current values of all config items. If a config item hasn't been changed from it's default, it is not included\n     * @param {string} [extra] Extra data to also include. If falsy, it is not included.\n     * @returns {string} Serialised URL parameters\n     */\n  }, {\n    key: \"serialiseToURLParams\",\n    value: function serialiseToURLParams(extra) {\n      var _this4 = this;\n      var urlPart = function urlPart(key, value) {\n        return [_this4.urlKey(key), value].join(_this4.shortUrl ? \"\" : \"=\");\n      };\n      var params = this.state.map(function (item) {\n        if ((0,_serialise__WEBPACK_IMPORTED_MODULE_4__.isSerialisableStateItem)(item) && (item.config[\"default\"] == null || !(0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(item.config.type === \"Datetime\" ? (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(item.config[\"default\"]) : item.config[\"default\"], item.value))) {\n          var serialised = (0,_serialise__WEBPACK_IMPORTED_MODULE_4__.serialise)(item, _this4.shortUrl);\n          return serialised != null ? urlPart(item.config.id, serialised) : null;\n        } else {\n          return null;\n        }\n      }).filter(_core_utils__WEBPACK_IMPORTED_MODULE_1__.isString);\n      return (extra != null ? [].concat(_toConsumableArray(params), [urlPart(\"extra\", extra)]) : params).join(\"&\");\n    }\n\n    /**\n     * Adds a copy to clipboard handler to a given element selector\n     * @param {string} selector Selector of the share button in the format of querySelector selectors\n     * @param {(function(state: PassedState<C>):string)} [extraData] If given a function, it is executed when the user clicks,\n     *  and its return value added to the URL parameters. If it is not a function, it is included in the URL parameters.\n     */\n  }, {\n    key: \"addCopyToClipboardHandler\",\n    value: function addCopyToClipboardHandler(selector, extraData) {\n      var _this5 = this;\n      var extraDataFunc = typeof extraData !== \"function\" ? function () {\n        return extraData;\n      } : extraData;\n      _core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(selector), \"click\", function () {\n        var searchParams = _this5.serialiseToURLParams(extraDataFunc === null || extraDataFunc === void 0 ? void 0 : extraDataFunc(_this5.createdPassedState()));\n        var sharableURL = location.protocol + \"//\" + location.host + location.pathname + (searchParams.length > 0 ? \"?\" + searchParams : \"\");\n        navigator.clipboard.writeText(sharableURL);\n      });\n      // $(selector)\n      //   .data(\"toggle\", \"tooltip\")\n      //   .data(\"placement\", \"top\")\n      //   .data(\"trigger\", \"manual\")\n      //   .attr(\"title\", \"Copied!\")\n      //   .tooltip()\n      //   .click((evt) => {\n      //     if (location.href !== sharableURL) {\n      //       history.pushState(null, \"\", sharableURL);\n      //     }\n      //     navigator.clipboard.writeText(sharableURL).then(() => {\n      //       const copyBtn = $(evt.currentTarget);\n      //       copyBtn.tooltip(\"show\");\n      //       setTimeout(() => copyBtn.tooltip(\"hide\"), 1000);\n      //     });\n      //   });\n    }\n  }]);\n  return ParamConfig;\n}();\n_defineProperty(ParamConfig, \"hashKeyLength\", 6);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/configParser/index.ts\n");

/***/ }),

/***/ "./src/configParser/init.ts":
/*!**********************************!*\
  !*** ./src/configParser/init.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initStateItem: () => (/* binding */ initStateItem)\n/* harmony export */ });\n/* harmony import */ var _core_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/dom */ \"./src/core/dom.ts\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils */ \"./src/core/utils.ts\");\n/* harmony import */ var _create__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create */ \"./src/configParser/create.ts\");\n/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./event */ \"./src/configParser/event.ts\");\n/* harmony import */ var _serialise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serialise */ \"./src/configParser/serialise.ts\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _wrapRegExp() { _wrapRegExp = function _wrapRegExp(e, r) { return new BabelRegExp(e, void 0, r); }; var e = RegExp.prototype, r = new WeakMap(); function BabelRegExp(e, t, p) { var o = new RegExp(e, t); return r.set(o, p || r.get(e)), _setPrototypeOf(o, BabelRegExp.prototype); } function buildGroups(e, t) { var p = r.get(t); return Object.keys(p).reduce(function (r, t) { var o = p[t]; if (\"number\" == typeof o) r[t] = e[o];else { for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++; r[t] = e[o[i]]; } return r; }, Object.create(null)); } return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) { var t = e.exec.call(this, r); if (t) { t.groups = buildGroups(t, this); var p = t.indices; p && (p.groups = buildGroups(p, this)); } return t; }, BabelRegExp.prototype[Symbol.replace] = function (t, p) { if (\"string\" == typeof p) { var o = r.get(this); return e[Symbol.replace].call(this, t, p.replace(/\\$<([^>]+)>/g, function (e, r) { var t = o[r]; return \"$\" + (Array.isArray(t) ? t.join(\"$\") : t); })); } if (\"function\" == typeof p) { var i = this; return e[Symbol.replace].call(this, t, function () { var e = arguments; return \"object\" != _typeof(e[e.length - 1]) && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e); }); } return e[Symbol.replace].call(this, t, p); }, _wrapRegExp.apply(this, arguments); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\nfunction setAttributes(el, attrs) {\n  if (attrs) {\n    for (var attr in attrs) {\n      el.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return el;\n}\nfunction initCollectionRowHtml(baseEl, config, rowValues, getCurrentValue, onUpdate) {\n  var row = document.createElement(\"tr\");\n  row.innerHTML = '<td><input data-row-selector type=\"checkbox\" /></td>';\n  baseEl.appendChild(row);\n  return config.fields.map(function (config, i) {\n    var itemEl = document.createElement(\"td\");\n    row.appendChild(itemEl);\n    return initHtml(itemEl, config, rowValues[i], function () {\n      return getCurrentValue()[i];\n    }, function (newValue) {\n      onUpdate(getCurrentValue().map(function (oldValue, j) {\n        return i === j ? newValue : oldValue;\n      }));\n    }, undefined, false);\n  });\n}\nfunction initCollectionHtml(baseEl, config, value, getCurrentValue, onUpdate) {\n  var _value$map;\n  var html = \"\\n    <div id=\\\"\".concat(config.id, \"\\\" class=\\\"collection\\\">\\n      <a class=\\\"heading\\\">\\n        <span>\").concat(config.label, \"</span>\\n        <span class=\\\"collection-caret\\\"></span>\\n      </a>\\n      <div class=\\\"collection-content\\\">\\n        <table>\\n          <thead>\\n            <tr>\\n              \").concat(config.expandable ? '<th scope=\"col\" style=\"width: 2rem;\"></th>' : \"\", \"\\n              \").concat(config.fields.map(function (childConfig) {\n    return '<th scope=\"col\">' + ((0,_serialise__WEBPACK_IMPORTED_MODULE_4__.isSerialisable)(childConfig) ? childConfig.label : \"\") + \"</th>\";\n  }).join(\"\"), \"\\n            </tr>\\n          </thead>\\n          <tbody></tbody>\\n        </table>\\n        \").concat(config.expandable ? \"<div class=\\\"collection-actions\\\">\\n              <button type=\\\"button\\\" class=\\\"secondary\\\" data-action=\\\"delete\\\">Delete Selected</button>\\n              <button type=\\\"button\\\" class=\\\"primary\\\" data-action=\\\"add\\\">Add Row</button>\\n            </div>\" : \"\", \"\\n      </div>\\n    </div>\\n  \");\n  baseEl.innerHTML = html;\n  var collection = _core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"#\".concat(config.id), baseEl);\n  _core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\".heading\", collection), \"click\", function () {\n    return collection.classList.toggle(\"collapsed\");\n  });\n  var id = 0;\n  var idLookup = {};\n  if (config.expandable) {\n    _core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"button[data-action=delete]\"), \"click\", function () {\n      var indicesToDelete = (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.filterAndMap)(_toConsumableArray(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"tbody\", collection).children), function (row, i) {\n        if (_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"[data-row-selector]\", row).checked) {\n          row.remove();\n          return i;\n        } else {\n          return null;\n        }\n      });\n      var _loop = function _loop(_id) {\n        if (indicesToDelete.includes(idLookup[_id])) {\n          delete idLookup[_id];\n        } else {\n          idLookup[_id] -= indicesToDelete.filter(function (i) {\n            return i < idLookup[_id];\n          }).length;\n        }\n      };\n      for (var _id in idLookup) {\n        _loop(_id);\n      }\n      onUpdate(getCurrentValue().filter(function (_, i) {\n        return !indicesToDelete.includes(i);\n      }));\n    });\n    _core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"button[data-action=add]\"), \"click\", function () {\n      var currentValue = getCurrentValue();\n      var rowId = \"\".concat(id++);\n      idLookup[rowId] = currentValue.length;\n      var rowValues = initCollectionRowHtml(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"tbody\", collection), config, config.fields.map(function (field) {\n        return field[\"default\"];\n      }), function () {\n        return getCurrentValue()[idLookup[rowId]];\n      }, function (newRow) {\n        return onUpdate((0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.replaceItem)(getCurrentValue(), idLookup[rowId], newRow));\n      });\n      onUpdate([].concat(_toConsumableArray(currentValue), [rowValues]));\n    });\n  }\n  return (_value$map = value === null || value === void 0 ? void 0 : value.map(function (row, i) {\n    var rowId = \"\".concat(id++);\n    idLookup[rowId] = i;\n    return initCollectionRowHtml(_core_dom__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"tbody\", collection), config, row, function () {\n      return getCurrentValue()[idLookup[rowId]];\n    }, function (newRow) {\n      return onUpdate((0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.replaceItem)(getCurrentValue(), idLookup[rowId], newRow));\n    });\n  })) !== null && _value$map !== void 0 ? _value$map : [];\n}\nfunction initHtml(baseEl, config, value, getCurrentValue, onUpdate, onClick) {\n  var hasId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  switch (config.type) {\n    case \"Button\":\n      {\n        var _config$text;\n        var inp = document.createElement(\"button\");\n        if (config.attrs != null) {\n          Object.entries(config.attrs).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              attr = _ref2[0],\n              value = _ref2[1];\n            return inp.setAttribute(attr, value);\n          });\n        }\n        inp.type = \"button\";\n        if (hasId) {\n          inp.setAttribute(\"id\", config.id);\n        }\n        inp.className = \"primary\";\n        inp.innerText = (_config$text = config.text) !== null && _config$text !== void 0 ? _config$text : \"\";\n        inp.onclick = onClick !== null && onClick !== void 0 ? onClick : null;\n        baseEl.appendChild(inp);\n        return null;\n      }\n    case \"Collection\":\n      {\n        return initCollectionHtml(baseEl, config, value, getCurrentValue, onUpdate);\n      }\n    case \"File\":\n      {\n        var _config$text2;\n        var _inp = document.createElement(\"input\");\n        if (config.attrs != null) {\n          Object.entries(config.attrs).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n              attr = _ref4[0],\n              value = _ref4[1];\n            return _inp.setAttribute(attr, value);\n          });\n        }\n        if (hasId) {\n          _inp.setAttribute(\"id\", config.id);\n        }\n        _inp.setAttribute(\"type\", (0,_create__WEBPACK_IMPORTED_MODULE_2__.inputType)(config.type));\n        _inp.style.display = \"none\";\n        _inp.onchange = (0,_event__WEBPACK_IMPORTED_MODULE_3__.changeCallback)(config, onUpdate);\n        var btn = document.createElement(\"button\");\n        btn.type = \"button\";\n        btn.innerText = (_config$text2 = config.text) !== null && _config$text2 !== void 0 ? _config$text2 : \"\";\n        btn.className = \"secondary\";\n        btn.onclick = function () {\n          return _inp.click();\n        };\n        var html = document.createElement(\"div\");\n        html.appendChild(_inp);\n        html.appendChild(btn);\n        baseEl.appendChild(html);\n        return \"\";\n      }\n    case \"Select\":\n      {\n        var _config$options;\n        var _inp2 = document.createElement(\"select\");\n        if (config.attrs != null) {\n          Object.entries(config.attrs).forEach(function (_ref5) {\n            var _ref6 = _slicedToArray(_ref5, 2),\n              attr = _ref6[0],\n              value = _ref6[1];\n            return _inp2.setAttribute(attr, value);\n          });\n        }\n        if (hasId) {\n          _inp2.setAttribute(\"id\", config.id);\n        }\n        _inp2.className = \"form-select\";\n        (_config$options = config.options) === null || _config$options === void 0 || _config$options.forEach(function (option) {\n          var el = document.createElement(\"option\");\n          el.value = option;\n          el.innerText = option;\n          _inp2.appendChild(el);\n        });\n        _inp2.value = value != null ? \"\".concat(value) : \"\";\n        baseEl.appendChild(_inp2);\n        return _inp2.value;\n      }\n    default:\n      {\n        var _inp3 = document.createElement(\"input\");\n        if (config.attrs != null) {\n          Object.entries(config.attrs).forEach(function (_ref7) {\n            var _ref8 = _slicedToArray(_ref7, 2),\n              attr = _ref8[0],\n              value = _ref8[1];\n            return _inp3.setAttribute(attr, value);\n          });\n        }\n        if (hasId) {\n          _inp3.setAttribute(\"id\", config.id);\n        }\n        _inp3.setAttribute(\"type\", (0,_create__WEBPACK_IMPORTED_MODULE_2__.inputType)(config.type));\n        _inp3.onchange = (0,_event__WEBPACK_IMPORTED_MODULE_3__.changeCallback)(config, onUpdate);\n        _inp3.oninput = (0,_event__WEBPACK_IMPORTED_MODULE_3__.inputCallback)(config, onUpdate);\n        if (config.type === \"Checkbox\") {\n          if (value) {\n            _inp3.setAttribute(\"checked\", \"\");\n          } else {\n            _inp3.removeAttribute(\"checked\");\n          }\n        } else if (config.type === \"Color\") {\n          _inp3.value = \"#\".concat(value);\n        } else if (config.type === \"Datetime\") {\n          if (value != null) {\n            _inp3.value = value.toLocaleString().replace( /*#__PURE__*/_wrapRegExp(/(\\d+)\\/(\\d+)\\/(\\d+)[^\\d]*(\\d+:\\d+).*/, {\n              d: 1,\n              m: 2,\n              y: 3,\n              t: 4\n            }), \"$<y>-$<m>-$<d>T$<t>\");\n          }\n        } else {\n          _inp3.value = \"\".concat(value);\n        }\n        baseEl.appendChild(_inp3);\n        return (0,_event__WEBPACK_IMPORTED_MODULE_3__.inputValue)(config, _inp3);\n      }\n  }\n}\nfunction initStateItem(baseEl, config, serialisedInitial, shortUrl, getCurrentValue, onUpdate, onClick) {\n  var _config$default;\n  var container = document.createElement(\"div\");\n  container.className = \"config-item\";\n  if ((0,_serialise__WEBPACK_IMPORTED_MODULE_4__.isSerialisable)(config) && config.label != null) {\n    var label = document.createElement(\"label\");\n    label.setAttribute(\"for\", config.id);\n    label.innerText = config.label;\n    // if (config.tooltip != null) {\n    //   label.setAttribute(\"data-toggle\", \"tooltip\");\n    //   label.setAttribute(\"data-placement\", \"top\");\n    //   label.setAttribute(\"title\", config.tooltip).tooltip();\n    // }\n    container.appendChild(label);\n  }\n  var initialValue = (0,_serialise__WEBPACK_IMPORTED_MODULE_4__.isSerialisable)(config) && serialisedInitial != null ? (0,_serialise__WEBPACK_IMPORTED_MODULE_4__.deserialise)(config, serialisedInitial, shortUrl) : null;\n  baseEl.appendChild(container);\n  var value = initHtml(container, config, initialValue !== null && initialValue !== void 0 ? initialValue : (0,_serialise__WEBPACK_IMPORTED_MODULE_4__.isSerialisable)(config) ? (_config$default = config[\"default\"]) !== null && _config$default !== void 0 ? _config$default : null : null, getCurrentValue, onUpdate, onClick);\n  return {\n    value: value,\n    config: config,\n    clicked: false\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/configParser/init.ts\n");

/***/ }),

/***/ "./src/configParser/serialise.ts":
/*!***************************************!*\
  !*** ./src/configParser/serialise.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_SERIALISED_VALUE_SIZE: () => (/* binding */ MAX_SERIALISED_VALUE_SIZE),\n/* harmony export */   deserialise: () => (/* binding */ deserialise),\n/* harmony export */   isSerialisable: () => (/* binding */ isSerialisable),\n/* harmony export */   isSerialisableStateItem: () => (/* binding */ isSerialisableStateItem),\n/* harmony export */   serialise: () => (/* binding */ serialise)\n/* harmony export */ });\n/* harmony import */ var _core_b64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/b64 */ \"./src/core/b64.ts\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils */ \"./src/core/utils.ts\");\n\n\nvar MAX_SERIALISED_VALUE_SIZE = 250;\nfunction serialiseRaw(state, shortUrl) {\n  var config = state.config;\n  switch (config.type) {\n    case \"Checkbox\":\n      {\n        var _ref = state,\n          value = _ref.value;\n        return \"\".concat(shortUrl ? +value : value);\n      }\n    case \"Collection\":\n      {\n        var _ref2 = state,\n          _value = _ref2.value;\n        return _value.map(function (row) {\n          return row.map(function (value, i) {\n            return serialise({\n              config: config.fields[i],\n              value: value,\n              clicked: false\n            }, shortUrl);\n          }).join(\",\");\n        }).join(\",\");\n      }\n    case \"Color\":\n      {\n        var _ref3 = state,\n          _value2 = _ref3.value;\n        var col = String(_value2.slice(1).toUpperCase());\n        if (shortUrl) return (0,_core_b64__WEBPACK_IMPORTED_MODULE_0__.intToBase64)(parseInt(col, 16));\n        return col;\n      }\n    case \"Datetime\":\n      {\n        var narrowed = state;\n        return shortUrl ? (0,_core_b64__WEBPACK_IMPORTED_MODULE_0__.intToBase64)(narrowed.value.getTime() / 60000 - new Date().getTimezoneOffset()) : encodeURIComponent((0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(narrowed.value));\n      }\n    case \"File\":\n      {\n        var _ref4 = state,\n          _value3 = _ref4.value;\n        return encodeURIComponent(_value3);\n      }\n    case \"Number\":\n      {\n        var _narrowed = state;\n        return \"\".concat(_narrowed.value);\n      }\n    case \"Range\":\n      {\n        var _narrowed2 = state;\n        return \"\".concat(_narrowed2.value);\n      }\n    case \"Select\":\n      {\n        var _narrowed3 = state;\n        return encodeURIComponent(_narrowed3.value);\n      }\n    case \"Text\":\n      {\n        var _narrowed4 = state;\n        return encodeURIComponent(_narrowed4.value);\n      }\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.checkExhausted)(config);\n  }\n}\nfunction serialise(state, shortUrl) {\n  var raw = serialiseRaw(state, shortUrl);\n  return raw.length <= MAX_SERIALISED_VALUE_SIZE ? raw : null;\n}\nfunction deserialise(config, value, shortUrl) {\n  switch (config.type) {\n    case \"Checkbox\":\n      return shortUrl ? value === \"1\" : value.toLowerCase() === \"true\";\n    case \"Color\":\n      return shortUrl ? (0,_core_b64__WEBPACK_IMPORTED_MODULE_0__.base64ToPosInt)(value).toString(16) : value.toUpperCase();\n    case \"Collection\":\n      {\n        var flat = value === \"\" ? [] : value.split(\",\");\n        return new Array(Math.ceil(flat.length / config.fields.length)).fill(null).map(function (_, rowIndex) {\n          return new Array(config.fields.length).fill(null).map(function (_, colIndex) {\n            var childConfig = config.fields[colIndex];\n            return deserialise(childConfig, flat[rowIndex * config.fields.length + colIndex], shortUrl);\n          });\n        });\n      }\n    case \"Datetime\":\n      return new Date(shortUrl ? (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(new Date((0,_core_b64__WEBPACK_IMPORTED_MODULE_0__.base64ToPosInt)(value) * 60000)) : decodeURIComponent(value));\n    case \"Number\":\n    case \"Range\":\n      return Number(value);\n    case \"File\":\n    case \"Select\":\n    case \"Text\":\n      return decodeURIComponent(value);\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.checkExhausted)(config);\n  }\n}\nfunction isSerialisable(config) {\n  switch (config.type) {\n    case \"Checkbox\":\n    case \"Collection\":\n    case \"Color\":\n    case \"Datetime\":\n    case \"Number\":\n    case \"Range\":\n    case \"Select\":\n    case \"Text\":\n      return true;\n    case \"Button\":\n    case \"File\":\n      return false;\n    default:\n      return (0,_core_utils__WEBPACK_IMPORTED_MODULE_1__.checkExhausted)(config);\n  }\n}\nfunction isSerialisableStateItem(item) {\n  return isSerialisable(item.config);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/configParser/serialise.ts\n");

/***/ }),

/***/ "./src/core/b64.ts":
/*!*************************!*\
  !*** ./src/core/b64.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToPosInt: () => (/* binding */ base64ToPosInt),\n/* harmony export */   intToBase64: () => (/* binding */ intToBase64)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar BASE_64_CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+-\";\nfunction intToBase64(n, length) {\n  var base64Str = \"\";\n  while (n) {\n    base64Str = BASE_64_CHARS[(n % 64 + 64) % 64] + base64Str;\n    n = n > 0 ? Math.floor(n / 64) : Math.ceil(n / 64);\n  }\n  return length != null ? base64Str.padStart(length, \"0\").slice(Math.max(base64Str.length - length, 0)) : base64Str;\n}\nfunction base64ToPosInt(str) {\n  var n = 0;\n  var _iterator = _createForOfIteratorHelper(str),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _char = _step.value;\n      n = n * 64 + BASE_64_CHARS.indexOf(_char);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return n;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9iNjQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFNQSxhQUFhLEdBQ2pCLGtFQUFrRTtBQUM3RCxTQUFTQyxXQUFXQSxDQUFDQyxDQUFTLEVBQUVDLE1BQWUsRUFBVTtFQUM5RCxJQUFJQyxTQUFTLEdBQUcsRUFBRTtFQUNsQixPQUFPRixDQUFDLEVBQUU7SUFDUkUsU0FBUyxHQUFHSixhQUFhLENBQUMsQ0FBRUUsQ0FBQyxHQUFHLEVBQUUsR0FBSSxFQUFFLElBQUksRUFBRSxDQUFDLEdBQUdFLFNBQVM7SUFDM0RGLENBQUMsR0FBR0EsQ0FBQyxHQUFHLENBQUMsR0FBR0csSUFBSSxDQUFDQyxLQUFLLENBQUNKLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBR0csSUFBSSxDQUFDRSxJQUFJLENBQUNMLENBQUMsR0FBRyxFQUFFLENBQUM7RUFDcEQ7RUFDQSxPQUFPQyxNQUFNLElBQUksSUFBSSxHQUNqQkMsU0FBUyxDQUNOSSxRQUFRLENBQUNMLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FDckJNLEtBQUssQ0FBQ0osSUFBSSxDQUFDSyxHQUFHLENBQUNOLFNBQVMsQ0FBQ0QsTUFBTSxHQUFHQSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FDaERDLFNBQVM7QUFDZjtBQUVPLFNBQVNPLGNBQWNBLENBQUNDLEdBQVcsRUFBVTtFQUNsRCxJQUFJVixDQUFDLEdBQUcsQ0FBQztFQUFDLElBQUFXLFNBQUEsR0FBQUMsMEJBQUEsQ0FDT0YsR0FBRztJQUFBRyxLQUFBO0VBQUE7SUFBcEIsS0FBQUYsU0FBQSxDQUFBRyxDQUFBLE1BQUFELEtBQUEsR0FBQUYsU0FBQSxDQUFBWCxDQUFBLElBQUFlLElBQUEsR0FBc0I7TUFBQSxJQUFiQyxLQUFJLEdBQUFILEtBQUEsQ0FBQUksS0FBQTtNQUNYakIsQ0FBQyxHQUFHQSxDQUFDLEdBQUcsRUFBRSxHQUFHRixhQUFhLENBQUNvQixPQUFPLENBQUNGLEtBQUksQ0FBQztJQUMxQztFQUFDLFNBQUFHLEdBQUE7SUFBQVIsU0FBQSxDQUFBUyxDQUFBLENBQUFELEdBQUE7RUFBQTtJQUFBUixTQUFBLENBQUFVLENBQUE7RUFBQTtFQUNELE9BQU9yQixDQUFDO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXJ0LXRlbXBsYXRlLy4vc3JjL2NvcmUvYjY0LnRzP2U0NmMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQkFTRV82NF9DSEFSUyA9XG4gIFwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXorLVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGludFRvQmFzZTY0KG46IG51bWJlciwgbGVuZ3RoPzogbnVtYmVyKTogc3RyaW5nIHtcbiAgbGV0IGJhc2U2NFN0ciA9IFwiXCI7XG4gIHdoaWxlIChuKSB7XG4gICAgYmFzZTY0U3RyID0gQkFTRV82NF9DSEFSU1soKG4gJSA2NCkgKyA2NCkgJSA2NF0gKyBiYXNlNjRTdHI7XG4gICAgbiA9IG4gPiAwID8gTWF0aC5mbG9vcihuIC8gNjQpIDogTWF0aC5jZWlsKG4gLyA2NCk7XG4gIH1cbiAgcmV0dXJuIGxlbmd0aCAhPSBudWxsXG4gICAgPyBiYXNlNjRTdHJcbiAgICAgICAgLnBhZFN0YXJ0KGxlbmd0aCwgXCIwXCIpXG4gICAgICAgIC5zbGljZShNYXRoLm1heChiYXNlNjRTdHIubGVuZ3RoIC0gbGVuZ3RoLCAwKSlcbiAgICA6IGJhc2U2NFN0cjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJhc2U2NFRvUG9zSW50KHN0cjogc3RyaW5nKTogbnVtYmVyIHtcbiAgbGV0IG4gPSAwO1xuICBmb3IgKGxldCBjaGFyIG9mIHN0cikge1xuICAgIG4gPSBuICogNjQgKyBCQVNFXzY0X0NIQVJTLmluZGV4T2YoY2hhcik7XG4gIH1cbiAgcmV0dXJuIG47XG59XG4iXSwibmFtZXMiOlsiQkFTRV82NF9DSEFSUyIsImludFRvQmFzZTY0IiwibiIsImxlbmd0aCIsImJhc2U2NFN0ciIsIk1hdGgiLCJmbG9vciIsImNlaWwiLCJwYWRTdGFydCIsInNsaWNlIiwibWF4IiwiYmFzZTY0VG9Qb3NJbnQiLCJzdHIiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsIl9zdGVwIiwicyIsImRvbmUiLCJjaGFyIiwidmFsdWUiLCJpbmRleE9mIiwiZXJyIiwiZSIsImYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/b64.ts\n");

/***/ }),

/***/ "./src/core/dom.ts":
/*!*************************!*\
  !*** ./src/core/dom.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction addListener(element, event, listener) {\n  element.addEventListener(event, listener);\n}\nfunction get(selector) {\n  var baseEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var element = baseEl.querySelector(selector);\n  if (element == null) {\n    throw new Error(\"Could not find element with selector \\\"\".concat(selector, \"\\\"\"));\n  }\n  return element;\n}\nvar dom = {\n  addListener: addListener,\n  get: get\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS9kb20udHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLFdBQVdBLENBSWxCQyxPQUFVLEVBQ1ZDLEtBQVEsRUFDUkMsUUFBd0QsRUFDeEQ7RUFDQUYsT0FBTyxDQUFDRyxnQkFBZ0IsQ0FDdEJGLEtBQUssRUFDTEMsUUFDRixDQUFDO0FBQ0g7QUFFQSxTQUFTRSxHQUFHQSxDQUNWQyxRQUFnQixFQUViO0VBQUEsSUFESEMsTUFBa0IsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUdHLFFBQVE7RUFFN0IsSUFBTVYsT0FBTyxHQUFHTSxNQUFNLENBQUNLLGFBQWEsQ0FBSU4sUUFBUSxDQUFDO0VBQ2pELElBQUlMLE9BQU8sSUFBSSxJQUFJLEVBQUU7SUFDbkIsTUFBTSxJQUFJWSxLQUFLLDJDQUFBQyxNQUFBLENBQTBDUixRQUFRLE9BQUcsQ0FBQztFQUN2RTtFQUNBLE9BQU9MLE9BQU87QUFDaEI7QUFFQSxJQUFNYyxHQUFHLEdBQUc7RUFBRWYsV0FBVyxFQUFYQSxXQUFXO0VBQUVLLEdBQUcsRUFBSEE7QUFBSSxDQUFDO0FBRWhDLGlFQUFlVSxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFydC10ZW1wbGF0ZS8uL3NyYy9jb3JlL2RvbS50cz9lYjRiIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFkZExpc3RlbmVyPFxuICBFIGV4dGVuZHMgSFRNTEVsZW1lbnQsXG4gIGNvbnN0IEsgZXh0ZW5kcyBrZXlvZiBIVE1MRWxlbWVudEV2ZW50TWFwXG4+KFxuICBlbGVtZW50OiBFLFxuICBldmVudDogSyxcbiAgbGlzdGVuZXI6ICh0aGlzOiBFLCBldnQ6IEhUTUxFbGVtZW50RXZlbnRNYXBbS10pID0+IHZvaWRcbikge1xuICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXI8Sz4oXG4gICAgZXZlbnQsXG4gICAgbGlzdGVuZXIgYXMgKHRoaXM6IEhUTUxFbGVtZW50LCBldnQ6IEhUTUxFbGVtZW50RXZlbnRNYXBbS10pID0+IHZvaWRcbiAgKTtcbn1cblxuZnVuY3Rpb24gZ2V0PEUgZXh0ZW5kcyBIVE1MRWxlbWVudD4oXG4gIHNlbGVjdG9yOiBzdHJpbmcsXG4gIGJhc2VFbDogUGFyZW50Tm9kZSA9IGRvY3VtZW50XG4pOiBFIHtcbiAgY29uc3QgZWxlbWVudCA9IGJhc2VFbC5xdWVyeVNlbGVjdG9yPEU+KHNlbGVjdG9yKTtcbiAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGZpbmQgZWxlbWVudCB3aXRoIHNlbGVjdG9yIFwiJHtzZWxlY3Rvcn1cImApO1xuICB9XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5jb25zdCBkb20gPSB7IGFkZExpc3RlbmVyLCBnZXQgfTtcblxuZXhwb3J0IGRlZmF1bHQgZG9tO1xuIl0sIm5hbWVzIjpbImFkZExpc3RlbmVyIiwiZWxlbWVudCIsImV2ZW50IiwibGlzdGVuZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0Iiwic2VsZWN0b3IiLCJiYXNlRWwiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJFcnJvciIsImNvbmNhdCIsImRvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/dom.ts\n");

/***/ }),

/***/ "./src/core/mouse.ts":
/*!***************************!*\
  !*** ./src/core/mouse.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Mouse)\n/* harmony export */ });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/core/vector.ts\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n\nfunction isMouseEvent(evt) {\n  return evt != null && _typeof(evt) === \"object\" && \"type\" in evt && typeof evt.type === \"string\" && evt.type.startsWith(\"mouse\");\n}\nvar Mouse = /*#__PURE__*/function () {\n  /**\n   * Tracks mouse events for a given DOM element\n   * @param {HTMLElement} element Element to track\n   */\n  function Mouse(element) {\n    _classCallCheck(this, Mouse);\n    this._down = false;\n    this._clicked = false;\n    this._relativePos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO;\n    this._pos = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ZERO;\n    this.elementBounds = element.getBoundingClientRect();\n    this.initListeners(element);\n  }\n  _createClass(Mouse, [{\n    key: \"initListeners\",\n    value: function initListeners(element) {\n      var _this = this;\n      var handleChange = function handleChange(callback, evt, pos) {\n        if (pos != null) {\n          _this.pos.setHead(pos.clientX, pos.clientY);\n          _this.relativePos.setHead(_this.pos.x / _this.elementBounds.width, _this.pos.y / _this.elementBounds.height);\n        }\n        callback === null || callback === void 0 || callback.call(_this, evt);\n      };\n      element.onmousemove = function (evt) {\n        return handleChange.call(_this, _this.moveCallback, evt);\n      };\n      element.ontouchmove = function (evt) {\n        return handleChange.call(_this, _this.moveCallback, evt, !isMouseEvent(evt) ? evt.touches[0] : undefined);\n      };\n      element.onmousedown = element.ontouchstart = function (evt) {\n        _this._clicked = _this._down === false;\n        _this._down = true;\n        handleChange.call(_this, _this.downCallback, evt);\n      };\n      element.onmouseup = element.ontouchend = function (evt) {\n        var _this$upCallback;\n        _this._clicked = _this._down = false;\n        (_this$upCallback = _this.upCallback) === null || _this$upCallback === void 0 || _this$upCallback.call(_this, evt);\n      };\n      element.onresize = function () {\n        _this.elementBounds = element.getBoundingClientRect();\n      };\n    }\n\n    /**\n     * Triggered when the mouse down or touch down event is fired on the element\n     *\n     * @param {MouseCallback} callback\n     */\n  }, {\n    key: \"setDownCallback\",\n    value: function setDownCallback(callback) {\n      this.downCallback = callback;\n    }\n\n    /**\n     * Triggered when the mouse move or touch move event is fired on the element\n     *\n     * @param {MouseCallback} callback\n     */\n  }, {\n    key: \"setMoveCallback\",\n    value: function setMoveCallback(callback) {\n      this.moveCallback = callback;\n    }\n\n    /**\n     * Triggered when the mouse down or touch down event is fired on the element\n     *\n     * @param {MouseCallback} callback\n     */\n  }, {\n    key: \"setUpCallback\",\n    value: function setUpCallback(callback) {\n      this.upCallback = callback;\n    }\n  }, {\n    key: \"down\",\n    get: function get() {\n      return this._down;\n    }\n  }, {\n    key: \"clicked\",\n    get: function get() {\n      return this._clicked;\n    }\n  }, {\n    key: \"pos\",\n    get: function get() {\n      return this._pos;\n    }\n  }, {\n    key: \"relativePos\",\n    get: function get() {\n      return this._relativePos;\n    }\n  }]);\n  return Mouse;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBa0I7TUFDaEIsT0FBTyxJQUFJLENBQUNwQyxJQUFJO0lBQ2xCO0VBQUM7SUFBQUssR0FBQTtJQUFBK0IsR0FBQSxFQUNELFNBQUFBLElBQUEsRUFBMEI7TUFDeEIsT0FBTyxJQUFJLENBQUN0QyxZQUFZO0lBQzFCO0VBQUM7RUFBQSxPQUFBTCxLQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXJ0LXRlbXBsYXRlLy4vc3JjL2NvcmUvbW91c2UudHM/YjVhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmVjdG9yIGZyb20gXCIuL3ZlY3RvclwiO1xuXG5mdW5jdGlvbiBpc01vdXNlRXZlbnQoZXZ0OiB1bmtub3duKTogZXZ0IGlzIE1vdXNlRXZlbnQge1xuICByZXR1cm4gKFxuICAgIGV2dCAhPSBudWxsICYmXG4gICAgdHlwZW9mIGV2dCA9PT0gXCJvYmplY3RcIiAmJlxuICAgIFwidHlwZVwiIGluIGV2dCAmJlxuICAgIHR5cGVvZiBldnQudHlwZSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgIGV2dC50eXBlLnN0YXJ0c1dpdGgoXCJtb3VzZVwiKVxuICApO1xufVxuXG50eXBlIE1vdXNlQ2FsbGJhY2sgPSAoXG4gIHRoaXM6IFRoaXNQYXJhbWV0ZXJUeXBlPE1vdXNlPixcbiAgZXZ0OiBNb3VzZUV2ZW50IHwgVG91Y2hFdmVudFxuKSA9PiB2b2lkO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3VzZSB7XG4gIHByaXZhdGUgX2Rvd246IGJvb2xlYW47XG4gIHByaXZhdGUgX2NsaWNrZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgX3BvczogVmVjdG9yO1xuICBwcml2YXRlIF9yZWxhdGl2ZVBvczogVmVjdG9yO1xuICBwcml2YXRlIGVsZW1lbnRCb3VuZHM6IERPTVJlY3Q7XG4gIHByaXZhdGUgZG93bkNhbGxiYWNrPzogTW91c2VDYWxsYmFjaztcbiAgcHJpdmF0ZSBtb3ZlQ2FsbGJhY2s/OiBNb3VzZUNhbGxiYWNrO1xuICBwcml2YXRlIHVwQ2FsbGJhY2s/OiBNb3VzZUNhbGxiYWNrO1xuXG4gIC8qKlxuICAgKiBUcmFja3MgbW91c2UgZXZlbnRzIGZvciBhIGdpdmVuIERPTSBlbGVtZW50XG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnQgRWxlbWVudCB0byB0cmFja1xuICAgKi9cbiAgY29uc3RydWN0b3IoZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcbiAgICB0aGlzLl9kb3duID0gZmFsc2U7XG4gICAgdGhpcy5fY2xpY2tlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3JlbGF0aXZlUG9zID0gVmVjdG9yLlpFUk87XG4gICAgdGhpcy5fcG9zID0gVmVjdG9yLlpFUk87XG5cbiAgICB0aGlzLmVsZW1lbnRCb3VuZHMgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgdGhpcy5pbml0TGlzdGVuZXJzKGVsZW1lbnQpO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0TGlzdGVuZXJzKGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKFxuICAgICAgY2FsbGJhY2s6IE1vdXNlQ2FsbGJhY2sgfCB1bmRlZmluZWQsXG4gICAgICBldnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50LFxuICAgICAgcG9zPzogVG91Y2hcbiAgICApID0+IHtcbiAgICAgIGlmIChwb3MgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnBvcy5zZXRIZWFkKHBvcy5jbGllbnRYLCBwb3MuY2xpZW50WSk7XG4gICAgICAgIHRoaXMucmVsYXRpdmVQb3Muc2V0SGVhZChcbiAgICAgICAgICB0aGlzLnBvcy54IC8gdGhpcy5lbGVtZW50Qm91bmRzLndpZHRoLFxuICAgICAgICAgIHRoaXMucG9zLnkgLyB0aGlzLmVsZW1lbnRCb3VuZHMuaGVpZ2h0XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBjYWxsYmFjaz8uY2FsbCh0aGlzLCBldnQpO1xuICAgIH07XG4gICAgZWxlbWVudC5vbm1vdXNlbW92ZSA9IChldnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50KSA9PlxuICAgICAgaGFuZGxlQ2hhbmdlLmNhbGwodGhpcywgdGhpcy5tb3ZlQ2FsbGJhY2ssIGV2dCk7XG4gICAgZWxlbWVudC5vbnRvdWNobW92ZSA9IChldnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50KSA9PlxuICAgICAgaGFuZGxlQ2hhbmdlLmNhbGwoXG4gICAgICAgIHRoaXMsXG4gICAgICAgIHRoaXMubW92ZUNhbGxiYWNrLFxuICAgICAgICBldnQsXG4gICAgICAgICFpc01vdXNlRXZlbnQoZXZ0KSA/IGV2dC50b3VjaGVzWzBdIDogdW5kZWZpbmVkXG4gICAgICApO1xuICAgIGVsZW1lbnQub25tb3VzZWRvd24gPSBlbGVtZW50Lm9udG91Y2hzdGFydCA9IChcbiAgICAgIGV2dDogTW91c2VFdmVudCB8IFRvdWNoRXZlbnRcbiAgICApID0+IHtcbiAgICAgIHRoaXMuX2NsaWNrZWQgPSB0aGlzLl9kb3duID09PSBmYWxzZTtcbiAgICAgIHRoaXMuX2Rvd24gPSB0cnVlO1xuICAgICAgaGFuZGxlQ2hhbmdlLmNhbGwodGhpcywgdGhpcy5kb3duQ2FsbGJhY2ssIGV2dCk7XG4gICAgfTtcbiAgICBlbGVtZW50Lm9ubW91c2V1cCA9IGVsZW1lbnQub250b3VjaGVuZCA9IChldnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50KSA9PiB7XG4gICAgICB0aGlzLl9jbGlja2VkID0gdGhpcy5fZG93biA9IGZhbHNlO1xuICAgICAgdGhpcy51cENhbGxiYWNrPy5jYWxsKHRoaXMsIGV2dCk7XG4gICAgfTtcblxuICAgIGVsZW1lbnQub25yZXNpemUgPSAoKSA9PiB7XG4gICAgICB0aGlzLmVsZW1lbnRCb3VuZHMgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlcmVkIHdoZW4gdGhlIG1vdXNlIGRvd24gb3IgdG91Y2ggZG93biBldmVudCBpcyBmaXJlZCBvbiB0aGUgZWxlbWVudFxuICAgKlxuICAgKiBAcGFyYW0ge01vdXNlQ2FsbGJhY2t9IGNhbGxiYWNrXG4gICAqL1xuICBzZXREb3duQ2FsbGJhY2soY2FsbGJhY2s6IE1vdXNlQ2FsbGJhY2spIHtcbiAgICB0aGlzLmRvd25DYWxsYmFjayA9IGNhbGxiYWNrO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyaWdnZXJlZCB3aGVuIHRoZSBtb3VzZSBtb3ZlIG9yIHRvdWNoIG1vdmUgZXZlbnQgaXMgZmlyZWQgb24gdGhlIGVsZW1lbnRcbiAgICpcbiAgICogQHBhcmFtIHtNb3VzZUNhbGxiYWNrfSBjYWxsYmFja1xuICAgKi9cbiAgc2V0TW92ZUNhbGxiYWNrKGNhbGxiYWNrOiBNb3VzZUNhbGxiYWNrKSB7XG4gICAgdGhpcy5tb3ZlQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyZWQgd2hlbiB0aGUgbW91c2UgZG93biBvciB0b3VjaCBkb3duIGV2ZW50IGlzIGZpcmVkIG9uIHRoZSBlbGVtZW50XG4gICAqXG4gICAqIEBwYXJhbSB7TW91c2VDYWxsYmFja30gY2FsbGJhY2tcbiAgICovXG4gIHNldFVwQ2FsbGJhY2soY2FsbGJhY2s6IE1vdXNlQ2FsbGJhY2spIHtcbiAgICB0aGlzLnVwQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuXG4gIGdldCBkb3duKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kb3duO1xuICB9XG4gIGdldCBjbGlja2VkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9jbGlja2VkO1xuICB9XG4gIGdldCBwb3MoKTogVmVjdG9yIHtcbiAgICByZXR1cm4gdGhpcy5fcG9zO1xuICB9XG4gIGdldCByZWxhdGl2ZVBvcygpOiBWZWN0b3Ige1xuICAgIHJldHVybiB0aGlzLl9yZWxhdGl2ZVBvcztcbiAgfVxufVxuIl0sIm5hbWVzIjpbIlZlY3RvciIsImlzTW91c2VFdmVudCIsImV2dCIsIl90eXBlb2YiLCJ0eXBlIiwic3RhcnRzV2l0aCIsIk1vdXNlIiwiZWxlbWVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9kb3duIiwiX2NsaWNrZWQiLCJfcmVsYXRpdmVQb3MiLCJaRVJPIiwiX3BvcyIsImVsZW1lbnRCb3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJpbml0TGlzdGVuZXJzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJfdGhpcyIsImhhbmRsZUNoYW5nZSIsImNhbGxiYWNrIiwicG9zIiwic2V0SGVhZCIsImNsaWVudFgiLCJjbGllbnRZIiwicmVsYXRpdmVQb3MiLCJ4Iiwid2lkdGgiLCJ5IiwiaGVpZ2h0IiwiY2FsbCIsIm9ubW91c2Vtb3ZlIiwibW92ZUNhbGxiYWNrIiwib250b3VjaG1vdmUiLCJ0b3VjaGVzIiwidW5kZWZpbmVkIiwib25tb3VzZWRvd24iLCJvbnRvdWNoc3RhcnQiLCJkb3duQ2FsbGJhY2siLCJvbm1vdXNldXAiLCJvbnRvdWNoZW5kIiwiX3RoaXMkdXBDYWxsYmFjayIsInVwQ2FsbGJhY2siLCJvbnJlc2l6ZSIsInNldERvd25DYWxsYmFjayIsInNldE1vdmVDYWxsYmFjayIsInNldFVwQ2FsbGJhY2siLCJnZXQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/mouse.ts\n");

/***/ }),

/***/ "./src/core/time_analysis.ts":
/*!***********************************!*\
  !*** ./src/core/time_analysis.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TimeAnalysis)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar AnalysisError = /*#__PURE__*/function (_Error) {\n  _inherits(AnalysisError, _Error);\n  var _super = _createSuper(AnalysisError);\n  function AnalysisError(message) {\n    var _this;\n    _classCallCheck(this, AnalysisError);\n    _this = _super.call(this, message);\n    _this.name = \"AnalysisError\";\n    return _this;\n  }\n  return _createClass(AnalysisError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar AuditError = /*#__PURE__*/function (_Error2) {\n  _inherits(AuditError, _Error2);\n  var _super2 = _createSuper(AuditError);\n  function AuditError(message) {\n    var _this2;\n    _classCallCheck(this, AuditError);\n    _this2 = _super2.call(this, message);\n    _this2.name = \"AuditError\";\n    return _this2;\n  }\n  return _createClass(AuditError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar TimeAnalysis = /*#__PURE__*/function () {\n  /**\n   * TimeAnalysis class constructor\n   * @param {number} [debugLevel=Infinity] Debug level to analyze at\n   */\n  function TimeAnalysis() {\n    var _this3 = this;\n    var debugLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    _classCallCheck(this, TimeAnalysis);\n    _defineProperty(this, \"recordedStats\", null);\n    _defineProperty(this, \"auditing\", false);\n    this.debugLevel = debugLevel;\n    TimeAnalysis.methods.filter(function (item) {\n      return item.minDebugLevel < debugLevel;\n    }).forEach(function (item) {\n      return item.methodNames.forEach(function (methodName) {\n        var _item$target;\n        var patchedMethod = _this3.timeMethod(item.target.prototype ? item.target.prototype[methodName] : item.target[methodName], methodName, item.minDebugLevel, (_item$target = item.target) === null || _item$target === void 0 ? void 0 : _item$target.name);\n        if (patchedMethod != null) {\n          try {\n            if (item.target.prototype) {\n              item.target.prototype[methodName] = patchedMethod;\n            } else {\n              item.target[methodName] = patchedMethod;\n            }\n          } catch (e) {\n            return;\n          }\n        }\n      });\n    });\n  }\n  _createClass(TimeAnalysis, [{\n    key: \"timeMethod\",\n    value: function timeMethod(method, methodName, minDebugLevel) {\n      var targetName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"Anonymous\";\n      if (TimeAnalysis.methodTimes[targetName] == null) {\n        TimeAnalysis.methodTimes[targetName] = {};\n      }\n      if (TimeAnalysis.methodTimes[targetName][methodName] == null) {\n        TimeAnalysis.methodTimes[targetName][methodName] = {\n          calls: 0,\n          totalExecutionTime: 0,\n          minDebugLevel: minDebugLevel,\n          setup: false\n        };\n      } else if (minDebugLevel < TimeAnalysis.methodTimes[targetName][methodName].minDebugLevel) {\n        TimeAnalysis.methodTimes[targetName][methodName].minDebugLevel = minDebugLevel;\n      }\n      if (TimeAnalysis.methodTimes[targetName][methodName].setup) return null;\n      TimeAnalysis.methodTimes[targetName][methodName].setup = true;\n      var currTimes = TimeAnalysis.methodTimes[targetName][methodName];\n      return function () {\n        var startTime = performance.now();\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var ret = method.apply(this, args);\n        currTimes.totalExecutionTime += performance.now() - startTime;\n        currTimes.calls++;\n        return ret;\n      };\n    }\n  }, {\n    key: \"recordCurrentStats\",\n    value: function recordCurrentStats() {\n      this.recordedStats = {};\n      for (var _i = 0, _Object$keys = Object.keys(TimeAnalysis.methodTimes); _i < _Object$keys.length; _i++) {\n        var _target = _Object$keys[_i];\n        this.recordedStats[_target] = {};\n        for (var _i2 = 0, _Object$keys2 = Object.keys(TimeAnalysis.methodTimes[_target]); _i2 < _Object$keys2.length; _i2++) {\n          var _methodName = _Object$keys2[_i2];\n          if (TimeAnalysis.methodTimes[_target][_methodName].minDebugLevel < this.debugLevel) {\n            this.recordedStats[_target][_methodName] = {\n              calls: TimeAnalysis.methodTimes[_target][_methodName].calls,\n              totalExecutionTime: TimeAnalysis.methodTimes[_target][_methodName].totalExecutionTime,\n              minDebugLevel: TimeAnalysis.methodTimes[_target][_methodName].minDebugLevel\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: \"generateStats\",\n    value: function generateStats() {\n      var stats = {};\n      if (this.recordedStats != null) {\n        for (var _i3 = 0, _Object$keys3 = Object.keys(this.recordedStats); _i3 < _Object$keys3.length; _i3++) {\n          var _target2 = _Object$keys3[_i3];\n          stats[_target2] = {};\n          for (var _i4 = 0, _Object$keys4 = Object.keys(this.recordedStats[_target2]); _i4 < _Object$keys4.length; _i4++) {\n            var _methodName2 = _Object$keys4[_i4];\n            stats[_target2][_methodName2] = _objectSpread(_objectSpread({}, this.recordedStats[_target2][_methodName2]), {}, {\n              calls: TimeAnalysis.methodTimes[_target2][_methodName2].calls - this.recordedStats[_target2][_methodName2].calls,\n              totalExecutionTime: TimeAnalysis.methodTimes[_target2][_methodName2].totalExecutionTime - this.recordedStats[_target2][_methodName2].totalExecutionTime\n            });\n          }\n        }\n      }\n      return stats;\n    }\n\n    /**\n     * Perform an audit for a given length of time\n     * @param {number} timeToWait Measured in milliseconds\n     * @returns {Promise<TimeAudit>} Resolved when the time is up\n     * @throws {AuditError} If there is an audit already going on\n     */\n  }, {\n    key: \"audit\",\n    value: function audit(timeToWait) {\n      var _this4 = this;\n      if (this.auditing) {\n        throw new AuditError(\"Cannot do two audits at the same time with the same instance! Wait until the first is finished or create another instance\");\n      }\n      this.auditing = true;\n      this.recordCurrentStats();\n      return new Promise(function (resolve) {\n        return setTimeout(function () {\n          var stats = _this4.generateStats();\n          _this4.auditing = false;\n          resolve(new TimeAudit(stats));\n        }, timeToWait);\n      });\n    }\n\n    /**\n     * Performs an audit on a given function\n     * @param {function():void} func Runs the function and then gets the stats for the function\n     * @returns {TimeAudit} Result of the audit\n     * @throws {AuditError} If there is an audit already going on\n     */\n  }, {\n    key: \"auditFunc\",\n    value: function auditFunc(func) {\n      if (this.auditing) {\n        throw new AuditError(\"Cannot do two audits at the same time with the same instance! Wait until the first is finished or create another instance\");\n      }\n      this.auditing = true;\n      this.recordCurrentStats();\n      func();\n      var stats = this.generateStats();\n      this.auditing = false;\n      return new TimeAudit(stats);\n    }\n  }], [{\n    key: \"registerMethods\",\n    value:\n    /**\n     * Registers a class for analyzing execution time\n     * @param {class} target The class/object to analyze\n     * @param {Array<string>} [methodNames] The method names of the class/object to analyze. Defaults to all except the constructor.\n     * @param {number} [minDebugLevel=1] The minimum debug level of these methods, where the lower it is, the higher priority it is to be included.\n     *  If called multiple times with the same method, the lower of the two debug levels is taken.\n     */\n    function registerMethods(target) {\n      var methodNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var minDebugLevel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      if (methodNames == null) {\n        methodNames = Object.getOwnPropertyNames(target.prototype || target).filter(function (name) {\n          return name !== \"constructor\" && typeof target[name] !== \"function\";\n        });\n      }\n      this.methods.push({\n        target: target,\n        methodNames: methodNames,\n        minDebugLevel: minDebugLevel\n      });\n    }\n  }]);\n  return TimeAnalysis;\n}();\n_defineProperty(TimeAnalysis, \"methods\", []);\n_defineProperty(TimeAnalysis, \"methodTimes\", {});\n\nvar TimeAudit = /*#__PURE__*/function () {\n  function TimeAudit(stats) {\n    _classCallCheck(this, TimeAudit);\n    this.stats = stats;\n  }\n\n  /**\n   * Get a specific call count for a given target/methodName pair\n   * @param {string} target\n   * @param {string} methodName\n   * @returns {number}\n   */\n  _createClass(TimeAudit, [{\n    key: \"calls\",\n    value: function calls(target, methodName) {\n      return this.stats[target][methodName].calls;\n    }\n\n    /**\n     * Get a specific totalExecutionTime for a given target/methodName pair\n     * @param {string} target\n     * @param {string} methodName\n     * @returns {number}\n     */\n  }, {\n    key: \"totalExecutionTime\",\n    value: function totalExecutionTime(target, methodName) {\n      return this.stats[target][methodName].totalExecutionTime;\n    }\n\n    /**\n     * Get a specific minDebugLevel for a given target/methodName pair\n     * @param {string} target\n     * @param {string} methodName\n     * @returns {number}\n     */\n  }, {\n    key: \"minDebugLevel\",\n    value: function minDebugLevel(target, methodName) {\n      return this.stats[target][methodName].minDebugLevel;\n    }\n\n    /**\n     * Generator which iterates over all the targets inside the stats\n     * @yields {string} Current target\n     */\n  }, {\n    key: \"targets\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime().mark(function targets() {\n      var _i5, _Object$keys5, _target3;\n      return _regeneratorRuntime().wrap(function targets$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _i5 = 0, _Object$keys5 = Object.keys(this.stats);\n          case 1:\n            if (!(_i5 < _Object$keys5.length)) {\n              _context.next = 8;\n              break;\n            }\n            _target3 = _Object$keys5[_i5];\n            _context.next = 5;\n            return _target3;\n          case 5:\n            _i5++;\n            _context.next = 1;\n            break;\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, targets, this);\n    })\n    /**\n     * Generator which iterates over the target's methodNames\n     * @param {string} target\n     * @yields {string} Current methodName\n     */\n  }, {\n    key: \"methodNames\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime().mark(function methodNames(target) {\n      var _i6, _Object$keys6, _methodName3;\n      return _regeneratorRuntime().wrap(function methodNames$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _i6 = 0, _Object$keys6 = Object.keys(this.stats[target]);\n          case 1:\n            if (!(_i6 < _Object$keys6.length)) {\n              _context2.next = 8;\n              break;\n            }\n            _methodName3 = _Object$keys6[_i6];\n            _context2.next = 5;\n            return _methodName3;\n          case 5:\n            _i6++;\n            _context2.next = 1;\n            break;\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, methodNames, this);\n    })\n    /**\n     * Iterates over the audited stats\n     * @param {function({calls: number, totalExecutionTime: number, minDebugLevel: number}, string, string):void} callbackFn\n     */\n  }, {\n    key: \"forEach\",\n    value: function forEach(callbackFn) {\n      var _iterator = _createForOfIteratorHelper(this.targets()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _target4 = _step.value;\n          var _iterator2 = _createForOfIteratorHelper(this.methodNames(_target4)),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _methodName4 = _step2.value;\n              callbackFn(_objectSpread({}, this.stats[_target4][_methodName4]), _target4, _methodName4);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    /**\n     * Prettifies the time audit so you can log it out\n     * @returns {string}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var auditString = \"\";\n      var _iterator3 = _createForOfIteratorHelper(this.targets()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _target5 = _step3.value;\n          var targetAudit = \"===== \".concat(_target5, \" =====\\n\");\n          if (auditString !== \"\") {\n            targetAudit = \"\\n\\n\" + targetAudit;\n          }\n          var hasValues = false;\n          var _iterator4 = _createForOfIteratorHelper(this.methodNames(_target5)),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _methodName5 = _step4.value;\n              var currStats = this.stats[_target5][_methodName5];\n              if (currStats.calls === 0) continue;\n              hasValues = true;\n              targetAudit += \"  - \".concat(_methodName5, \" Calls: \").concat(currStats.calls, \" Total Execution Time: \").concat(currStats.totalExecutionTime, \"ms Average Execution Time \").concat(currStats.totalExecutionTime / currStats.calls, \"ms\\n\");\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          if (hasValues) {\n            auditString += targetAudit;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return auditString;\n    }\n  }]);\n  return TimeAudit;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/time_analysis.ts\n");

/***/ }),

/***/ "./src/core/types.ts":
/*!***************************!*\
  !*** ./src/core/types.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appMethods: () => (/* binding */ appMethods)\n/* harmony export */ });\nfunction appMethods(methods) {\n  return methods;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29yZS90eXBlcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBa0JPLFNBQVNBLFVBQVVBLENBQ3hCQyxPQUFzQixFQUNQO0VBQ2YsT0FBT0EsT0FBTztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcnQtdGVtcGxhdGUvLi9zcmMvY29yZS90eXBlcy50cz9jYWY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJhbUNvbmZpZyBmcm9tIFwiLi4vY29uZmlnUGFyc2VyXCI7XG5pbXBvcnQgeyBEZXJpdmVQYXJ0cyB9IGZyb20gXCIuLi9jb25maWdQYXJzZXIvZGVyaXZlXCI7XG5pbXBvcnQgeyBDb25maWdQYXJ0IH0gZnJvbSBcIi4uL2NvbmZpZ1BhcnNlci90eXBlc1wiO1xuaW1wb3J0IE1vdXNlIGZyb20gXCIuL21vdXNlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwQ29udGV4dDxBIGV4dGVuZHMgQXJyYXk8Q29uZmlnUGFydDxzdHJpbmc+Pj4ge1xuICBwYXJhbUNvbmZpZzogUGFyYW1Db25maWc8RGVyaXZlUGFydHM8QT4+O1xuICBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xuICBjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcbiAgbW91c2U6IE1vdXNlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcE1ldGhvZHM8QSBleHRlbmRzIEFycmF5PENvbmZpZ1BhcnQ8c3RyaW5nPj4+IHtcbiAgaW5pdDogKGFwcENvbnRleHQ6IEFwcENvbnRleHQ8QT4pID0+IHZvaWQ7XG4gIGFuaW1hdGlvbkZyYW1lPzogKGFwcENvbnRleHQ6IEFwcENvbnRleHQ8QT4pID0+IHZvaWQ7XG4gIG9uUmVzaXplPzogKGV2dDogVUlFdmVudCwgYXBwQ29udGV4dDogQXBwQ29udGV4dDxBPikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFwcE1ldGhvZHM8QSBleHRlbmRzIEFycmF5PENvbmZpZ1BhcnQ8c3RyaW5nPj4+KFxuICBtZXRob2RzOiBBcHBNZXRob2RzPEE+XG4pOiBBcHBNZXRob2RzPEE+IHtcbiAgcmV0dXJuIG1ldGhvZHM7XG59XG4iXSwibmFtZXMiOlsiYXBwTWV0aG9kcyIsIm1ldGhvZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/types.ts\n");

/***/ }),

/***/ "./src/core/utils.ts":
/*!***************************!*\
  !*** ./src/core/utils.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkExhausted: () => (/* binding */ checkExhausted),\n/* harmony export */   filterAndMap: () => (/* binding */ filterAndMap),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   hasKey: () => (/* binding */ hasKey),\n/* harmony export */   isArrayOf: () => (/* binding */ isArrayOf),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   replaceItem: () => (/* binding */ replaceItem)\n/* harmony export */ });\nfunction _wrapRegExp() { _wrapRegExp = function _wrapRegExp(e, r) { return new BabelRegExp(e, void 0, r); }; var e = RegExp.prototype, r = new WeakMap(); function BabelRegExp(e, t, p) { var o = new RegExp(e, t); return r.set(o, p || r.get(e)), _setPrototypeOf(o, BabelRegExp.prototype); } function buildGroups(e, t) { var p = r.get(t); return Object.keys(p).reduce(function (r, t) { var o = p[t]; if (\"number\" == typeof o) r[t] = e[o];else { for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++; r[t] = e[o[i]]; } return r; }, Object.create(null)); } return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) { var t = e.exec.call(this, r); if (t) { t.groups = buildGroups(t, this); var p = t.indices; p && (p.groups = buildGroups(p, this)); } return t; }, BabelRegExp.prototype[Symbol.replace] = function (t, p) { if (\"string\" == typeof p) { var o = r.get(this); return e[Symbol.replace].call(this, t, p.replace(/\\$<([^>]+)>/g, function (e, r) { var t = o[r]; return \"$\" + (Array.isArray(t) ? t.join(\"$\") : t); })); } if (\"function\" == typeof p) { var i = this; return e[Symbol.replace].call(this, t, function () { var e = arguments; return \"object\" != _typeof(e[e.length - 1]) && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e); }); } return e[Symbol.replace].call(this, t, p); }, _wrapRegExp.apply(this, arguments); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction checkExhausted(value) {\n  throw new Error(\"Value not exhausted: \".concat(JSON.stringify(value)));\n}\nfunction replaceItem(arr, index, item) {\n  var copy = _toConsumableArray(arr);\n  if (item != null) {\n    copy.splice(index, 1, item);\n  } else {\n    copy.splice(index, 1);\n  }\n  return copy;\n}\nfunction filterAndMap(arr, mapper) {\n  return arr.reduce(function (acc, item, i, arr) {\n    var mapped = mapper(item, i, arr);\n    return mapped != null ? [].concat(_toConsumableArray(acc), [mapped]) : acc;\n  }, []);\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nfunction isObject(value) {\n  return value != null && _typeof(value) === \"object\" && !Array.isArray(value);\n}\nfunction isArrayOf(guard) {\n  return function (value) {\n    return Array.isArray(value) && value.every(guard);\n  };\n}\nfunction hasKey(value, key, guard) {\n  return isObject(value) && key in value && guard(value[key]);\n}\nfunction isEqual(a, b) {\n  return Array.isArray(a) ? Array.isArray(b) && a.length === b.length && a.every(function (v, i) {\n    return isEqual(v, b[i]);\n  }) : a === b;\n}\nfunction formatDate(date) {\n  return date.toLocaleString().replace( /*#__PURE__*/_wrapRegExp(/(\\d+)\\/(\\d+)\\/(\\d+)[^\\d]*(\\d+:\\d+).*/, {\n    d: 1,\n    m: 2,\n    y: 3,\n    t: 4\n  }), \"$<y>-$<m>-$<d>T$<t>\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkMsT0FBTyxlQUFBQyxXQUFBLENBQ04sc0NBQXNEO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLENBQUE7RUFBQSxJQUN0RCxxQkFDRixDQUFDO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXJ0LXRlbXBsYXRlLy4vc3JjL2NvcmUvdXRpbHMudHM/NGE1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBHdWFyZDxUPiA9ICh2YWx1ZTogdW5rbm93bikgPT4gdmFsdWUgaXMgVDtcblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRXhoYXVzdGVkKHZhbHVlOiBuZXZlcik6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IEVycm9yKGBWYWx1ZSBub3QgZXhoYXVzdGVkOiAke0pTT04uc3RyaW5naWZ5KHZhbHVlKX1gKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VJdGVtPFQ+KFxuICBhcnI6IEFycmF5PFQ+LFxuICBpbmRleDogbnVtYmVyLFxuICBpdGVtPzogVFxuKTogQXJyYXk8VD4ge1xuICBjb25zdCBjb3B5ID0gWy4uLmFycl07XG5cbiAgaWYgKGl0ZW0gIT0gbnVsbCkge1xuICAgIGNvcHkuc3BsaWNlKGluZGV4LCAxLCBpdGVtKTtcbiAgfSBlbHNlIHtcbiAgICBjb3B5LnNwbGljZShpbmRleCwgMSk7XG4gIH1cblxuICByZXR1cm4gY29weTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFuZE1hcDxJLCBPPihcbiAgYXJyOiBJW10sXG4gIG1hcHBlcjogKHZhbDogSSwgaW5kZXg6IG51bWJlciwgYXJyOiBJW10pID0+IE8gfCBudWxsIHwgdW5kZWZpbmVkXG4pOiBPW10ge1xuICByZXR1cm4gYXJyLnJlZHVjZSgoYWNjOiBPW10sIGl0ZW0sIGksIGFycikgPT4ge1xuICAgIGNvbnN0IG1hcHBlZCA9IG1hcHBlcihpdGVtLCBpLCBhcnIpO1xuICAgIHJldHVybiBtYXBwZWQgIT0gbnVsbCA/IFsuLi5hY2MsIG1hcHBlZF0gOiBhY2M7XG4gIH0sIFtdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgbnVtYmVyIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgc3RyaW5nIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4ge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheU9mPFQ+KGd1YXJkOiBHdWFyZDxUPik6IEd1YXJkPEFycmF5PFQ+PiB7XG4gIHJldHVybiAodmFsdWUpOiB2YWx1ZSBpcyBBcnJheTxUPiA9PlxuICAgIEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmV2ZXJ5KGd1YXJkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0tleTxLIGV4dGVuZHMgc3RyaW5nLCBWPihcbiAgdmFsdWU6IHVua25vd24sXG4gIGtleTogSyxcbiAgZ3VhcmQ6IEd1YXJkPFY+XG4pOiB2YWx1ZSBpcyB7IFtrIGluIEtdOiBWIH0ge1xuICByZXR1cm4gaXNPYmplY3QodmFsdWUpICYmIGtleSBpbiB2YWx1ZSAmJiBndWFyZCh2YWx1ZVtrZXldKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRXF1YWw8VD4oYTogVCwgYjogVCk6IGJvb2xlYW4ge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhKVxuICAgID8gQXJyYXkuaXNBcnJheShiKSAmJlxuICAgICAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICAgICAgYS5ldmVyeSgodiwgaSkgPT4gaXNFcXVhbCh2LCBiW2ldKSlcbiAgICA6IGEgPT09IGI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICByZXR1cm4gZGF0ZVxuICAgIC50b0xvY2FsZVN0cmluZygpXG4gICAgLnJlcGxhY2UoXG4gICAgICAvKD88ZD5cXGQrKVxcLyg/PG0+XFxkKylcXC8oPzx5PlxcZCspW15cXGRdKig/PHQ+XFxkKzpcXGQrKS4qLyxcbiAgICAgIFwiJDx5Pi0kPG0+LSQ8ZD5UJDx0PlwiXG4gICAgKTtcbn1cbiJdLCJuYW1lcyI6WyJjaGVja0V4aGF1c3RlZCIsInZhbHVlIiwiRXJyb3IiLCJjb25jYXQiLCJKU09OIiwic3RyaW5naWZ5IiwicmVwbGFjZUl0ZW0iLCJhcnIiLCJpbmRleCIsIml0ZW0iLCJjb3B5IiwiX3RvQ29uc3VtYWJsZUFycmF5Iiwic3BsaWNlIiwiZmlsdGVyQW5kTWFwIiwibWFwcGVyIiwicmVkdWNlIiwiYWNjIiwiaSIsIm1hcHBlZCIsImlzTnVtYmVyIiwiaXNTdHJpbmciLCJpc09iamVjdCIsIl90eXBlb2YiLCJBcnJheSIsImlzQXJyYXkiLCJpc0FycmF5T2YiLCJndWFyZCIsImV2ZXJ5IiwiaGFzS2V5Iiwia2V5IiwiaXNFcXVhbCIsImEiLCJiIiwibGVuZ3RoIiwidiIsImZvcm1hdERhdGUiLCJkYXRlIiwidG9Mb2NhbGVTdHJpbmciLCJyZXBsYWNlIiwiX3dyYXBSZWdFeHAiLCJkIiwibSIsInkiLCJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/utils.ts\n");

/***/ }),

/***/ "./src/core/vector.ts":
/*!****************************!*\
  !*** ./src/core/vector.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Vector)\n/* harmony export */ });\n/* harmony import */ var _time_analysis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time_analysis */ \"./src/core/time_analysis.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/core/utils.ts\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar Vector = /*#__PURE__*/function () {\n  function Vector(xOrVec, y) {\n    _classCallCheck(this, Vector);\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(xOrVec)) {\n      this.x = xOrVec;\n      this.y = y !== null && y !== void 0 ? y : xOrVec;\n    } else {\n      this.x = xOrVec.x;\n      this.y = xOrVec.y;\n    }\n  }\n\n  /**\n   * Raises the current x and y to given power(s)\n   * @param  {...VectorParam} args If given a number, both components are raised to this. If given a Vector, the power operation is component-wise\n   * @returns {this} this\n   */\n  _createClass(Vector, [{\n    key: \"pow\",\n    value: function pow() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      for (var _i = 0, _args = args; _i < _args.length; _i++) {\n        var arg = _args[_i];\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg)) {\n          this.x = Math.pow(this.x, arg);\n          this.y = Math.pow(this.y, arg);\n        } else {\n          this.x = Math.pow(this.x, arg.x);\n          this.y = Math.pow(this.y, arg.y);\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Adds the current x and y with given operand(s)\n     * @param  {...VectorParam} args If given a number, both components are added with this. If given a Vector, the add operation is component-wise\n     * @returns {this} this\n     */\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      for (var _i2 = 0, _args2 = args; _i2 < _args2.length; _i2++) {\n        var arg = _args2[_i2];\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg)) {\n          this.x += arg;\n          this.y += arg;\n        } else {\n          this.x += arg.x;\n          this.y += arg.y;\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Subtracts given operand(s) from the current x and y\n     * @param  {...VectorParam} args If given a number, both components have the number taken away from them. If given a Vector, the subtract operation is component-wise\n     * @returns {this} this\n     */\n  }, {\n    key: \"sub\",\n    value: function sub() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      for (var _i3 = 0, _args3 = args; _i3 < _args3.length; _i3++) {\n        var arg = _args3[_i3];\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg)) {\n          this.x -= arg;\n          this.y -= arg;\n        } else {\n          this.x -= arg.x;\n          this.y -= arg.y;\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Multiplies the current x and y with given operand(s)\n     * @param  {...VectorParam} args If given a number, both components are multiplied by this. If given a Vector, the multiply operation is component-wise\n     * @returns {this} this\n     */\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      for (var _i4 = 0, _args4 = args; _i4 < _args4.length; _i4++) {\n        var arg = _args4[_i4];\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg)) {\n          this.x *= arg;\n          this.y *= arg;\n        } else {\n          this.x *= arg.x;\n          this.y *= arg.y;\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Divides the current x and y by the given operand(s)\n     * @param  {...VectorParam} args If given a number, both components are divided by this. If given a Vector, the divide operation is component-wise\n     * @returns {this} this\n     */\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      for (var _i5 = 0, _args5 = args; _i5 < _args5.length; _i5++) {\n        var arg = _args5[_i5];\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg)) {\n          this.x /= arg;\n          this.y /= arg;\n        } else {\n          this.x /= arg.x;\n          this.y /= arg.y;\n        }\n      }\n      return this;\n    }\n\n    /**\n     * Linear interpolation between this vector and a given other vector\n     * @param {Vector} other Vector to interpolate to\n     * @param {number} t Between 0 and 1, where 0 is this current vector and 1 is the supplied other vector\n     * @returns {Vector} Interpolated vector\n     */\n  }, {\n    key: \"lerp\",\n    value: function lerp(other, t) {\n      return new Vector(this.x - (this.x - other.x) * t, this.y - (this.y - other.y) * t);\n    }\n\n    /**\n     * Computes the dot product with a supplied vector\n     * @param {Vector} other Vector to dot product with\n     * @returns {number} Dot product\n     */\n  }, {\n    key: \"dot\",\n    value: function dot(other) {\n      return this.x * other.x + this.y * other.y;\n    }\n\n    /**\n     * Returns the max of x or y, whichever component is bigger\n     * @returns {number} the value of the bigger component\n     */\n  }, {\n    key: \"getMax\",\n    value: function getMax() {\n      return Math.max(this.x, this.y);\n    }\n    /**\n     * Returns the min of x or y, whichever component is smaller\n     * @returns {number} the value of the smaller component\n     */\n  }, {\n    key: \"getMin\",\n    value: function getMin() {\n      return Math.min(this.x, this.y);\n    }\n\n    /**\n     * Sets the \"head\" of the current vector to a given value\n     * @param {VectorParam} xOrVec X component of the given coordinates. Or a vector to copy if supplied instead.\n     * @param {number} [y] Y component of the given coordinates\n     * @returns {this} this\n     */\n  }, {\n    key: \"setHead\",\n    value: function setHead(xOrVec, y) {\n      if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(xOrVec)) {\n        this.x = xOrVec;\n        this.y = y !== null && y !== void 0 ? y : xOrVec;\n      } else {\n        this.x = xOrVec.x;\n        this.y = xOrVec.y;\n      }\n      return this;\n    }\n\n    /**\n     * Computes the squared magnitude of this vector\n     * @returns {number} Squared magnitude of this vector\n     */\n  }, {\n    key: \"getSquaredMagnitude\",\n    value: function getSquaredMagnitude() {\n      return this.x * this.x + this.y * this.y;\n    }\n\n    /**\n     * Computes the magnitude of this vector\n     * @returns {number} Magnitude of this vector\n     */\n  }, {\n    key: \"getMagnitude\",\n    value: function getMagnitude() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\n     * Sets the magnitude of this vector\n     * @param {number} mag New magnitude to set to\n     * @returns {this} this\n     */\n  }, {\n    key: \"setMagnitude\",\n    value: function setMagnitude(mag) {\n      var magRatio = mag / Math.sqrt(this.x * this.x + this.y * this.y);\n      this.x *= magRatio;\n      this.y *= magRatio;\n      return this;\n    }\n\n    /**\n     * Returns a new normalised version of this vector\n     * @returns {Vector} Normalised vector\n     */\n  }, {\n    key: \"getNorm\",\n    value: function getNorm() {\n      var magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n      return new Vector(this.x / magnitude, this.y / magnitude);\n    }\n\n    /**\n     * Normalises this vector\n     * @returns {this} this\n     */\n  }, {\n    key: \"normalise\",\n    value: function normalise() {\n      var magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n      this.x /= magnitude;\n      this.y /= magnitude;\n      return this;\n    }\n\n    /**\n     * Sets each component of this vector to it's absolute value\n     * @returns {this} this\n     */\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      this.x = Math.abs(this.x);\n      this.y = Math.abs(this.y);\n      return this;\n    }\n\n    /**\n     * Get the sign of each component in this vector\n     * @returns {Vector} The signs of this vector where 1 >= 0 and -1 < 0\n     */\n  }, {\n    key: \"getSign\",\n    value: function getSign() {\n      var x = this.x >= 0 ? 1 : -1;\n      var y = this.y >= 0 ? 1 : -1;\n      return new Vector(x, y);\n    }\n\n    /**\n     * Gets the angle of this vector\n     * @returns {number} Angle between 0 and 2 * PI\n     */\n  }, {\n    key: \"getAngle\",\n    value: function getAngle() {\n      var x = this.x ? this.x : 0;\n      var y = this.y ? this.y : 0;\n      if (x === 0 && y === 0) return 0;else if (y === 0) return x > 0 ? 0 : Math.PI;else if (x === 0) return y > 0 ? Math.PI / 2 : Math.PI * 3 / 2;else if (x > 0 && y > 0) return Math.atan(y / x);else if (x > 0) return Math.PI * 3 / 2 + Math.atan(x / -y);else if (y > 0) return Math.PI - Math.atan(y / -x);else return Math.PI * 3 / 2 - Math.atan(x / y);\n    }\n\n    /**\n     * Sets the angle of this vector\n     * @param {number} angle Angle to set to\n     * @returns {this} this\n     */\n  }, {\n    key: \"setAngle\",\n    value: function setAngle(angle) {\n      var magnitude = Math.sqrt(this.x * this.x + this.y * this.y);\n      this.x = magnitude * Math.cos(angle);\n      this.y = magnitude * Math.sin(angle);\n      return this;\n    }\n\n    /**\n     * Rotates this vector about a pivot\n     * @param {Vector} pivot Pivot to rotate around\n     * @param {number} angle Angle to rotate by\n     * @returns {this} this\n     */\n  }, {\n    key: \"rotate\",\n    value: function rotate(pivot, angle) {\n      var dx = this.x - pivot.x;\n      var dy = this.y - pivot.y;\n      var dMag = Math.sqrt(dx * dx + dy * dy);\n      var currAngle;\n      if (dx === 0 && dy === 0) currAngle = 0;else if (dy === 0) currAngle = dx > 0 ? 0 : Math.PI;else if (dx === 0) currAngle = dy > 0 ? Math.PI / 2 : Math.PI * 3 / 2;else if (dx > 0 && dy > 0) currAngle = Math.atan(dy / dx);else if (dx > 0) currAngle = Math.PI * 3 / 2 + Math.atan(dx / -dy);else if (dy > 0) currAngle = Math.PI - Math.atan(dy / -dx);else currAngle = Math.PI * 3 / 2 - Math.atan(dx / dy);\n      var oX = dMag * Math.cos(currAngle + angle);\n      var oY = dMag * Math.sin(currAngle + angle);\n      this.x = oX + pivot.x;\n      this.y = oY + pivot.y;\n      return this;\n    }\n\n    /**\n     * Copies this vector into a duplicate\n     * @returns {Vector} Duplicated version of this vector\n     */\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Vector(this);\n    }\n\n    /**\n     * Tests if this vector and another have equal components\n     * @param {Vector} other\n     * @returns {boolean} If they are equal\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.x === other.x && this.y === other.y;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"x:\".concat(this.x, \",y:\").concat(this.y);\n    }\n\n    /**\n     * Parses a string and tries to make a vector out of it\n     * @param {string} str Vector string in the format of \"x:NUMBER,y:NUMBER\"\n     * @returns {(Vector|undefined)} A vector if the x and y components have been found, else void\n     */\n  }], [{\n    key: \"parseString\",\n    value: function parseString(str) {\n      var tokens = /^x:([^,]+),y:(.+)$/.exec(str);\n      if (tokens) {\n        return new Vector(Number(tokens[1]), Number(tokens[2]));\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"ZERO\",\n    get: function get() {\n      return new Vector(0, 0);\n    }\n  }, {\n    key: \"ONE\",\n    get: function get() {\n      return new Vector(1, 1);\n    }\n  }, {\n    key: \"RIGHT\",\n    get: function get() {\n      return new Vector(1, 0);\n    }\n  }, {\n    key: \"LEFT\",\n    get: function get() {\n      return new Vector(-1, 0);\n    }\n  }, {\n    key: \"DOWN\",\n    get: function get() {\n      return new Vector(0, 1);\n    }\n  }, {\n    key: \"UP\",\n    get: function get() {\n      return new Vector(0, -1);\n    }\n  }]);\n  return Vector;\n}();\n\ntry {\n  _time_analysis__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerMethods(Vector);\n} catch (_unused) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/vector.ts\n");

/***/ }),

/***/ "./src/init.ts":
/*!*********************!*\
  !*** ./src/init.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _configParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configParser */ \"./src/configParser/index.ts\");\n/* harmony import */ var _core_mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/mouse */ \"./src/core/mouse.ts\");\n/* harmony import */ var _core_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/dom */ \"./src/core/dom.ts\");\n/* harmony import */ var _app_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/config */ \"./src/app/config.ts\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app */ \"./src/app/index.ts\");\n\n\n\n\n\nvar canvas = _core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"canvas\");\nvar ctx = canvas.getContext(\"2d\");\nif (ctx == null) {\n  throw new Error(\"Could not get a 2D rendering context for element \".concat(canvas));\n}\nvar mouse = new _core_mouse__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas);\nvar paramConfig = new _configParser__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_app_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"#cfg-outer\"));\nvar appContext = {\n  paramConfig: paramConfig,\n  canvas: canvas,\n  ctx: ctx,\n  mouse: mouse\n};\nparamConfig.addCopyToClipboardHandler(\"#share-btn\");\nwindow.onresize = function (evt) {\n  var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n    width = _canvas$getBoundingCl.width,\n    height = _canvas$getBoundingCl.height;\n  canvas.width = width;\n  canvas.height = height;\n  if (_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"].onResize != null) {\n    _app__WEBPACK_IMPORTED_MODULE_4__[\"default\"].onResize(evt, appContext);\n  }\n};\n_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"#download-btn\"), \"click\", function () {\n  var _document$getElements, _document$getElements2;\n  var url = canvas.toDataURL();\n  var anchor = document.createElement(\"a\");\n  anchor.href = url;\n  anchor.download = \"\".concat((_document$getElements = (_document$getElements2 = document.getElementsByTagName(\"title\")) === null || _document$getElements2 === void 0 ? void 0 : _document$getElements2[0].innerText) !== null && _document$getElements !== void 0 ? _document$getElements : \"download\", \".png\");\n  document.body.appendChild(anchor);\n  anchor.click();\n  document.body.removeChild(anchor);\n});\n_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"#config-dropdown-btn\"), \"click\", function () {\n  return _core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"dialog#config-modal\").showModal();\n});\n_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addListener(_core_dom__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"#config-modal\"), \"click\", function (evt) {\n  if (evt.target === this) {\n    this.close();\n  }\n});\n_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"].init(appContext);\nvar animationFrame = _app__WEBPACK_IMPORTED_MODULE_4__[\"default\"].animationFrame;\nif (animationFrame != null) {\n  var animate = function animate() {\n    animationFrame(appContext);\n    requestAnimationFrame(animate);\n  };\n  requestAnimationFrame(animate);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3VCLE1BQU0sS0FBSyxJQUFJLEVBQUU7SUFDdkIsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQztFQUNkO0FBQ0YsQ0FDRixDQUFDO0FBRURyQyw0Q0FBRyxDQUFDc0MsSUFBSSxDQUFDN0IsVUFBVSxDQUFDO0FBRXBCLElBQVE4QixjQUFjLEdBQUt2Qyw0Q0FBRyxDQUF0QnVDLGNBQWM7QUFDdEIsSUFBSUEsY0FBYyxJQUFJLElBQUksRUFBRTtFQUMxQixJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBT0EsQ0FBQSxFQUFTO0lBQ3BCRCxjQUFjLENBQUM5QixVQUFVLENBQUM7SUFDMUJnQyxxQkFBcUIsQ0FBQ0QsT0FBTyxDQUFDO0VBQ2hDLENBQUM7RUFDREMscUJBQXFCLENBQUNELE9BQU8sQ0FBQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcnQtdGVtcGxhdGUvLi9zcmMvaW5pdC50cz8xMmU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJhbUNvbmZpZyBmcm9tIFwiLi9jb25maWdQYXJzZXJcIjtcbmltcG9ydCBNb3VzZSBmcm9tIFwiLi9jb3JlL21vdXNlXCI7XG5pbXBvcnQgZG9tIGZyb20gXCIuL2NvcmUvZG9tXCI7XG5pbXBvcnQgY29uZmlnIGZyb20gXCIuL2FwcC9jb25maWdcIjtcbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tIFwiLi9jb3JlL3R5cGVzXCI7XG5pbXBvcnQgYXBwIGZyb20gXCIuL2FwcFwiO1xuXG5jb25zdCBjYW52YXMgPSBkb20uZ2V0PEhUTUxDYW52YXNFbGVtZW50PihcImNhbnZhc1wiKTtcbmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5pZiAoY3R4ID09IG51bGwpIHtcbiAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgZ2V0IGEgMkQgcmVuZGVyaW5nIGNvbnRleHQgZm9yIGVsZW1lbnQgJHtjYW52YXN9YCk7XG59XG5cbmNvbnN0IG1vdXNlID0gbmV3IE1vdXNlKGNhbnZhcyk7XG5cbmNvbnN0IHBhcmFtQ29uZmlnID0gbmV3IFBhcmFtQ29uZmlnKGNvbmZpZywgZG9tLmdldChcIiNjZmctb3V0ZXJcIikpO1xuXG5jb25zdCBhcHBDb250ZXh0OiBBcHBDb250ZXh0PHR5cGVvZiBjb25maWc+ID0ge1xuICBwYXJhbUNvbmZpZyxcbiAgY2FudmFzLFxuICBjdHgsXG4gIG1vdXNlLFxufTtcbnBhcmFtQ29uZmlnLmFkZENvcHlUb0NsaXBib2FyZEhhbmRsZXIoXCIjc2hhcmUtYnRuXCIpO1xuXG53aW5kb3cub25yZXNpemUgPSAoZXZ0KSA9PiB7XG4gIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjYW52YXMud2lkdGggPSB3aWR0aDtcbiAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgaWYgKGFwcC5vblJlc2l6ZSAhPSBudWxsKSB7XG4gICAgYXBwLm9uUmVzaXplKGV2dCwgYXBwQ29udGV4dCk7XG4gIH1cbn07XG5cbmRvbS5hZGRMaXN0ZW5lcihkb20uZ2V0KFwiI2Rvd25sb2FkLWJ0blwiKSwgXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IHVybCA9IGNhbnZhcy50b0RhdGFVUkwoKTtcbiAgY29uc3QgYW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG4gIGFuY2hvci5ocmVmID0gdXJsO1xuICBhbmNob3IuZG93bmxvYWQgPSBgJHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRpdGxlXCIpPy5bMF0uaW5uZXJUZXh0ID8/IFwiZG93bmxvYWRcIlxuICB9LnBuZ2A7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYW5jaG9yKTtcbiAgYW5jaG9yLmNsaWNrKCk7XG4gIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYW5jaG9yKTtcbn0pO1xuXG5kb20uYWRkTGlzdGVuZXIoZG9tLmdldChcIiNjb25maWctZHJvcGRvd24tYnRuXCIpLCBcImNsaWNrXCIsICgpID0+XG4gIGRvbS5nZXQ8SFRNTERpYWxvZ0VsZW1lbnQ+KFwiZGlhbG9nI2NvbmZpZy1tb2RhbFwiKS5zaG93TW9kYWwoKVxuKTtcblxuZG9tLmFkZExpc3RlbmVyKFxuICBkb20uZ2V0PEhUTUxEaWFsb2dFbGVtZW50PihcIiNjb25maWctbW9kYWxcIiksXG4gIFwiY2xpY2tcIixcbiAgZnVuY3Rpb24gKGV2dCkge1xuICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG4pO1xuXG5hcHAuaW5pdChhcHBDb250ZXh0KTtcblxuY29uc3QgeyBhbmltYXRpb25GcmFtZSB9ID0gYXBwO1xuaWYgKGFuaW1hdGlvbkZyYW1lICE9IG51bGwpIHtcbiAgY29uc3QgYW5pbWF0ZSA9ICgpID0+IHtcbiAgICBhbmltYXRpb25GcmFtZShhcHBDb250ZXh0KTtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7XG4gIH07XG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTtcbn1cbiJdLCJuYW1lcyI6WyJQYXJhbUNvbmZpZyIsIk1vdXNlIiwiZG9tIiwiY29uZmlnIiwiYXBwIiwiY2FudmFzIiwiZ2V0IiwiY3R4IiwiZ2V0Q29udGV4dCIsIkVycm9yIiwiY29uY2F0IiwibW91c2UiLCJwYXJhbUNvbmZpZyIsImFwcENvbnRleHQiLCJhZGRDb3B5VG9DbGlwYm9hcmRIYW5kbGVyIiwid2luZG93Iiwib25yZXNpemUiLCJldnQiLCJfY2FudmFzJGdldEJvdW5kaW5nQ2wiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsImhlaWdodCIsIm9uUmVzaXplIiwiYWRkTGlzdGVuZXIiLCJfZG9jdW1lbnQkZ2V0RWxlbWVudHMiLCJfZG9jdW1lbnQkZ2V0RWxlbWVudHMyIiwidXJsIiwidG9EYXRhVVJMIiwiYW5jaG9yIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsImRvd25sb2FkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJpbm5lclRleHQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwic2hvd01vZGFsIiwidGFyZ2V0IiwiY2xvc2UiLCJpbml0IiwiYW5pbWF0aW9uRnJhbWUiLCJhbmltYXRlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/init.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/init.ts");
/******/ 	
/******/ })()
;